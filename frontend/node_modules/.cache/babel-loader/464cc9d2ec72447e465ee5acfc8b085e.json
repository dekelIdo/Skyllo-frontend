{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dekel\\\\Desktop\\\\Trellor\\\\Sprint4\\\\frontend\\\\src\\\\cmps\\\\dynamic-cmp.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { ReactComponent as CloseDynamicCmp } from '../assets/img/close-task-form.svg';\nimport { AttachmentCmp } from './dynamic-cmps/attachment-cmp';\nimport { ChecklistCmp } from './dynamic-cmps/checklist-cmp';\nimport { CoverCmp } from './dynamic-cmps/cover-cmp';\nimport { LabelsCmp } from './dynamic-cmps/labels-cmp';\nimport { MembersCmp } from './dynamic-cmps/members-cmp';\nimport { TaskDate } from './dynamic-cmps/task-date';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function DynamicCmp({\n  type,\n  setDynamicType,\n  task,\n  group,\n  setTask,\n  setIsChecklist,\n  mouseLocation,\n  board\n}) {\n  _s();\n\n  const [hideHeader, setHideHeader] = useState(true);\n\n  const onCloseDynamicCmp = ev => {\n    ev.preventDefault();\n    ev.stopPropagation();\n    setDynamicType('');\n  };\n\n  const dynamicCmpToRender = type => {\n    switch (type) {\n      case 'members':\n        return /*#__PURE__*/_jsxDEV(MembersCmp, {\n          group: group,\n          task: task,\n          setTask: setTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 24\n        }, this);\n\n      case 'attachment':\n        return /*#__PURE__*/_jsxDEV(AttachmentCmp, {\n          task: task,\n          setTask: setTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 24\n        }, this);\n\n      case 'cover':\n        return /*#__PURE__*/_jsxDEV(CoverCmp, {\n          task: task,\n          setTask: setTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 24\n        }, this);\n\n      case 'labels':\n        return /*#__PURE__*/_jsxDEV(LabelsCmp, {\n          task: task,\n          group: group,\n          setHideHeader: setHideHeader,\n          setDynamicType: setDynamicType,\n          setTask: setTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 24\n        }, this);\n\n      case 'checklist':\n        return /*#__PURE__*/_jsxDEV(ChecklistCmp, {\n          task: task,\n          setDynamicType: setDynamicType,\n          setTask: setTask,\n          setIsChecklist: setIsChecklist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 24\n        }, this);\n\n      case 'dates':\n        return /*#__PURE__*/_jsxDEV(TaskDate, {\n          board: board,\n          group: group,\n          task: task,\n          setDynamicType: setDynamicType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 24\n        }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      top: mouseLocation + 40\n    },\n    className: \"dynamic-cmp\",\n    children: [hideHeader && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dynamic-cmp-header\",\n      children: [type, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dynamic-cmp-close\",\n        children: /*#__PURE__*/_jsxDEV(CloseDynamicCmp, {\n          onClick: onCloseDynamicCmp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dynamic-cmp-content\",\n      children: dynamicCmpToRender(type)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DynamicCmp, \"48IJ2fpZM3cCZYB8egXwN/Rjjjg=\");\n\n_c = DynamicCmp;\n\nvar _c;\n\n$RefreshReg$(_c, \"DynamicCmp\");","map":{"version":3,"sources":["C:/Users/Dekel/Desktop/Trellor/Sprint4/frontend/src/cmps/dynamic-cmp.jsx"],"names":["useState","ReactComponent","CloseDynamicCmp","AttachmentCmp","ChecklistCmp","CoverCmp","LabelsCmp","MembersCmp","TaskDate","DynamicCmp","type","setDynamicType","task","group","setTask","setIsChecklist","mouseLocation","board","hideHeader","setHideHeader","onCloseDynamicCmp","ev","preventDefault","stopPropagation","dynamicCmpToRender","top"],"mappings":"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","sourcesContent":["\r\nimport { useState } from 'react'\r\nimport { ReactComponent as CloseDynamicCmp } from '../assets/img/close-task-form.svg'\r\nimport { AttachmentCmp } from './dynamic-cmps/attachment-cmp'\r\nimport { ChecklistCmp } from './dynamic-cmps/checklist-cmp'\r\nimport { CoverCmp } from './dynamic-cmps/cover-cmp'\r\nimport { LabelsCmp } from './dynamic-cmps/labels-cmp'\r\nimport { MembersCmp } from './dynamic-cmps/members-cmp'\r\nimport { TaskDate } from './dynamic-cmps/task-date'\r\n\r\n\r\nexport function DynamicCmp({ type, setDynamicType, task, group, setTask, setIsChecklist, mouseLocation, board }) {\r\n\r\n    const [hideHeader, setHideHeader] = useState(true)\r\n\r\n    const onCloseDynamicCmp = (ev) => {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        \r\n        setDynamicType('')\r\n    }\r\n\r\n\r\n    const dynamicCmpToRender = (type) => {\r\n        switch (type) {\r\n            case 'members':\r\n                return <MembersCmp\r\n                    group={group}\r\n                    task={task}\r\n                    setTask={setTask}\r\n                />\r\n            case 'attachment':\r\n                return <AttachmentCmp\r\n                    task={task}\r\n                    setTask={setTask} />\r\n            case 'cover':\r\n                return <CoverCmp\r\n                    task={task}\r\n                    setTask={setTask} />\r\n            case 'labels':\r\n                return <LabelsCmp task={task}\r\n                    group={group}\r\n                    setHideHeader={setHideHeader}\r\n                    setDynamicType={setDynamicType}\r\n                    setTask={setTask} />\r\n            case 'checklist':\r\n                return <ChecklistCmp\r\n                    task={task}\r\n                    setDynamicType={setDynamicType}\r\n                    setTask={setTask}\r\n                    setIsChecklist={setIsChecklist} /> \r\n            case 'dates':\r\n                return <TaskDate \r\n                    board={board}\r\n                    group={group}\r\n                    task={task}\r\n                    setDynamicType={setDynamicType}\r\n                    />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section style={{ top: mouseLocation + 40 }} className=\"dynamic-cmp\">\r\n            {hideHeader && <section className=\"dynamic-cmp-header\">{type}\r\n                <button className='dynamic-cmp-close'>\r\n                    <CloseDynamicCmp onClick={onCloseDynamicCmp} />\r\n                </button>\r\n            </section>\r\n            }\r\n            <section className='dynamic-cmp-content'>\r\n                {dynamicCmpToRender(type)}\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}