{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dekel\\\\Desktop\\\\Trellor\\\\Sprint4\\\\frontend\\\\src\\\\cmps\\\\board-header.jsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from 'react-redux';\nimport { boardService } from '../services/board.service';\nimport { updateBoard } from '../store/board.actions'; //icons\n\nimport { ReactComponent as SvgStar } from '../assets/img/star.svg';\nimport { ReactComponent as InviteMemberIcon } from '../assets/img/invite-member-icon.svg';\nimport { ReactComponent as MenuIcon } from '../assets/img/more-options-icon.svg';\nimport { ReactComponent as CloseUsersModalIcon } from '../assets/img/close-task-form.svg';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { userService } from '../services/user.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BoardHeader({\n  board\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const members = board.members;\n  const [isMembersModalOpen, setIsMembersModalOpen] = useState(false);\n  const [users, setUsers] = useState(null);\n  if (!board.isPopoverShown) board.isPopoverShown = false;\n\n  const onSetIsStared = async boardId => {\n    try {\n      const board = await boardService.getById(boardId);\n      const boadToUpdate = { ...board,\n        style: { ...board.style,\n          isStared: !board.style.isStared\n        }\n      };\n      dispatch(updateBoard(boadToUpdate));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onShownPopover = () => {\n    board.isPopoverShown = !board.isPopoverShown;\n    const boardToUpdate = { ...board\n    };\n    dispatch(updateBoard(boardToUpdate));\n  };\n\n  const loadUsers = async () => {\n    const users = await userService.getUsers();\n\n    try {\n      setUsers(users);\n      console.log('users', users);\n    } catch {\n      console.log('cannot load users');\n    }\n  };\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  const getMemberBackground = member => {\n    if (member.img) return `url(${member.img}) center center / cover`;else return `url(https://res.cloudinary.com/skello-dev-learning/image/upload/v1643564751/dl6faof1ecyjnfnknkla.svg) center center / cover;`;\n  };\n\n  const getUserBackground = user => {\n    if (user.imgUrl) return `url(${user.imgUrl}) center center / cover`;else {\n      return `url(https://res.cloudinary.com/skello-dev-learning/image/upload/v1643564751/dl6faof1ecyjnfnknkla.svg) center center / cover;`;\n    }\n  };\n\n  const onAddMemberToBoard = user => {\n    const boardToUpdate = structuredClone(board);\n    const currMember = {\n      _id: user._id,\n      fullname: user.fullname,\n      img: user.imgUrl\n    };\n    const existMember = boardToUpdate.members.filter(member => {\n      return member._id === currMember._id;\n    });\n    console.log('existMember:', existMember);\n    if (existMember.length !== 0 && existMember) return;\n    boardToUpdate.members.push(currMember);\n    dispatch(updateBoard(boardToUpdate));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"board-header \",\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"board-header main-container board-header-main-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: board.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-header-nav-left-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board-header-favorite-icon action-board-header\",\n            children: board.style.isStared ? /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: () => onSetIsStared(board._id),\n              className: \"star-app-header\",\n              src: require('../assets/img/star.png')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 53\n            }, this) : /*#__PURE__*/_jsxDEV(SvgStar, {\n              onClick: () => onSetIsStared(board._id),\n              className: \"star-board-preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"board-header-border-left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board-header-members-container\",\n            children: members && members.map(member => {\n              {\n                return member.img ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"board-header-member-box\",\n                  style: {\n                    background: getMemberBackground(member)\n                  }\n                }, member._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 57\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"avatar-img-guest-member-box\"\n                }, member._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 41\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"board-header-border-left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invite-member-icon\",\n            onClick: () => setIsMembersModalOpen(!isMembersModalOpen),\n            children: /*#__PURE__*/_jsxDEV(InviteMemberIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), isMembersModalOpen && /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"board-header-users-modal\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"users-modal-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Invite users to board\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(CloseUsersModalIcon, {\n                className: \"close-users-modal-icon\",\n                onClick: () => setIsMembersModalOpen(!isMembersModalOpen)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"users-modal-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"users-modal-users-list\",\n                children: users && users.map(user => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"users-modal-user-preview\",\n                    onClick: () => onAddMemberToBoard(user),\n                    children: [user.imgUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"users-modal-user-box\",\n                      style: {\n                        background: getUserBackground(user)\n                      }\n                    }, user._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 64\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"avatar-img-guest-user-box\"\n                    }, user._id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: user.fullname\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 49\n                    }, this)]\n                  }, user._id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 52\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-header-menu-btn\",\n          children: [/*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: onShownPopover,\n            children: \"Show Menu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BoardHeader, \"Ixp2+DdiOKCadyN47B0DFLU7CeQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = BoardHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardHeader\");","map":{"version":3,"sources":["C:/Users/Dekel/Desktop/Trellor/Sprint4/frontend/src/cmps/board-header.jsx"],"names":["useDispatch","boardService","updateBoard","ReactComponent","SvgStar","InviteMemberIcon","MenuIcon","CloseUsersModalIcon","useState","useEffect","userService","BoardHeader","board","dispatch","members","isMembersModalOpen","setIsMembersModalOpen","users","setUsers","isPopoverShown","onSetIsStared","boardId","getById","boadToUpdate","style","isStared","err","console","log","onShownPopover","boardToUpdate","loadUsers","getUsers","getMemberBackground","member","img","getUserBackground","user","imgUrl","onAddMemberToBoard","structuredClone","currMember","_id","fullname","existMember","filter","length","push","title","require","map","background"],"mappings":"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","sourcesContent":["\r\nimport { useDispatch } from 'react-redux';\r\nimport { boardService } from '../services/board.service';\r\nimport { updateBoard } from '../store/board.actions';\r\n\r\n//icons\r\nimport { ReactComponent as SvgStar } from '../assets/img/star.svg';\r\nimport { ReactComponent as InviteMemberIcon } from '../assets/img/invite-member-icon.svg';\r\nimport { ReactComponent as MenuIcon } from '../assets/img/more-options-icon.svg';\r\nimport { ReactComponent as CloseUsersModalIcon } from '../assets/img/close-task-form.svg'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { userService } from '../services/user.service';\r\n\r\nexport function BoardHeader({ board }) {\r\n    const dispatch = useDispatch()\r\n    const members = board.members\r\n    const [isMembersModalOpen, setIsMembersModalOpen] = useState(false)\r\n    const [users, setUsers] = useState(null)\r\n\r\n\r\n\r\n    if (!board.isPopoverShown) board.isPopoverShown = false\r\n    const onSetIsStared = async (boardId) => {\r\n        try {\r\n            const board = await boardService.getById(boardId)\r\n            const boadToUpdate = { ...board, style: { ...board.style, isStared: !board.style.isStared } }\r\n            dispatch(updateBoard(boadToUpdate))\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    const onShownPopover = () => {\r\n        board.isPopoverShown = !board.isPopoverShown\r\n        const boardToUpdate = { ...board }\r\n        dispatch(updateBoard(boardToUpdate))\r\n\r\n    }\r\n\r\n    const loadUsers = async () => {\r\n        const users = await userService.getUsers()\r\n        try {\r\n            setUsers(users)\r\n            console.log('users', users)\r\n        }\r\n        catch {\r\n            console.log('cannot load users')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadUsers()\r\n    }, [])\r\n\r\n\r\n    const getMemberBackground = (member) => {\r\n        if (member.img) return `url(${member.img}) center center / cover`\r\n        else return `url(https://res.cloudinary.com/skello-dev-learning/image/upload/v1643564751/dl6faof1ecyjnfnknkla.svg) center center / cover;`\r\n    }\r\n\r\n    const getUserBackground = (user) => {\r\n        if (user.imgUrl) return `url(${user.imgUrl}) center center / cover`\r\n        else {\r\n            return `url(https://res.cloudinary.com/skello-dev-learning/image/upload/v1643564751/dl6faof1ecyjnfnknkla.svg) center center / cover;`\r\n        }\r\n    }\r\n\r\n    const onAddMemberToBoard = (user) => {\r\n        const boardToUpdate = structuredClone(board)\r\n        const currMember = {\r\n            _id: user._id,\r\n            fullname: user.fullname,\r\n            img: user.imgUrl\r\n        }\r\n\r\n        const existMember = boardToUpdate.members.filter(member => {\r\n            return member._id === currMember._id\r\n        })\r\n\r\n        console.log('existMember:', existMember)\r\n\r\n        if (existMember.length !== 0 && existMember) return\r\n\r\n        boardToUpdate.members.push(currMember)\r\n        dispatch(updateBoard(boardToUpdate))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <section className=\"board-header \">\r\n\r\n            <nav className=\"board-header main-container board-header-main-nav\">\r\n                <div className=\"nav-left\">\r\n                    <h1>{board.title}</h1>\r\n                    <div className=\"board-header-nav-left-actions\">\r\n                        <div className=\"board-header-favorite-icon action-board-header\">\r\n                            {board.style.isStared ? <img onClick={() => onSetIsStared(board._id)} className='star-app-header' src={require('../assets/img/star.png')} />\r\n                                : <SvgStar onClick={() => onSetIsStared(board._id)} className='star-board-preview' />}\r\n                        </div>\r\n\r\n                        <span className='board-header-border-left'></span>\r\n\r\n                        <div className='board-header-members-container'>\r\n                            {members && members.map(member => {\r\n                                {\r\n                                    return member.img ? <div className='board-header-member-box' key={member._id} style={{ background: getMemberBackground(member) }}></div> :\r\n                                        <div className='avatar-img-guest-member-box' key={member._id}></div>\r\n                                }\r\n                            })}\r\n                        </div>\r\n                    <span className='board-header-border-left'></span>\r\n\r\n                        <div className='invite-member-icon' onClick={() => setIsMembersModalOpen(!isMembersModalOpen)}>\r\n                            <InviteMemberIcon />\r\n                        </div>\r\n\r\n                        {isMembersModalOpen &&\r\n                            <section className='board-header-users-modal'>\r\n\r\n                                <div className='users-modal-header'>\r\n                                    <span>Invite users to board</span>\r\n                                    <CloseUsersModalIcon className='close-users-modal-icon' onClick={() => setIsMembersModalOpen(!isMembersModalOpen)} />\r\n                                </div>\r\n                                <div className='users-modal-content'>\r\n\r\n                                    <div className='users-modal-users-list'>\r\n\r\n                                        {users && users.map(user => {\r\n                                            return <div className='users-modal-user-preview'\r\n                                                onClick={() => onAddMemberToBoard(user)}\r\n                                                key={user._id}>\r\n                                                {user.imgUrl ? <div className='users-modal-user-box' key={user._id} style={{ background: getUserBackground(user) }}></div> :\r\n                                                    <div className='avatar-img-guest-user-box' key={user._id}></div>}\r\n\r\n                                                <span>{user.fullname}</span>\r\n                                            </div>\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </section>\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"nav-right\">\r\n                    <div className='board-header-menu-btn'>\r\n                        <MenuIcon />\r\n                        <p onClick={onShownPopover}>Show Menu</p>\r\n                    </div>\r\n                </div>\r\n\r\n            </nav>\r\n        </section>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}