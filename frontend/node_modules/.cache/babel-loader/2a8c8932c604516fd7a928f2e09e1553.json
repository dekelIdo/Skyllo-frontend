{"ast":null,"code":"export const uploadService = {\n  uploadImg\n};\n\nfunction uploadImg(ev) {\n  const CLOUD_NAME = \"dwdpgwxqv\";\n  const UPLOAD_PRESET = \"mthqhg3r\";\n  const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`;\n  console.log(' ev.target.files[0]', ev.target.files[0]);\n  const formData = new FormData();\n  formData.append('upload_preset', UPLOAD_PRESET);\n  formData.append('file', ev.target.files[0]);\n  return fetch(UPLOAD_URL, {\n    method: 'POST',\n    body: formData\n  }).then(res => res.json()).then(res => {\n    return res;\n  }).catch(err => console.error(err));\n}","map":{"version":3,"sources":["C:/Users/Dekel/Desktop/Trellor/Sprint4/frontend/src/services/upload.service.js"],"names":["uploadService","uploadImg","ev","CLOUD_NAME","UPLOAD_PRESET","UPLOAD_URL","console","log","target","files","formData","FormData","append","fetch","method","body","then","res","json","catch","err","error"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG;AAC3BC,EAAAA;AAD2B,CAAtB;;AAGP,SAASA,SAAT,CAAmBC,EAAnB,EAAuB;AACrB,QAAMC,UAAU,GAAG,WAAnB;AACA,QAAMC,aAAa,GAAG,UAAtB;AACA,QAAMC,UAAU,GAAI,mCAAkCF,UAAW,eAAjE;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCL,EAAE,CAACM,MAAH,CAAUC,KAAV,CAAgB,CAAhB,CAAnC;AAEA,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiCR,aAAjC;AACAM,EAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBV,EAAE,CAACM,MAAH,CAAUC,KAAV,CAAgB,CAAhB,CAAxB;AAEA,SAAOI,KAAK,CAACR,UAAD,EAAa;AACvBS,IAAAA,MAAM,EAAE,MADe;AAEvBC,IAAAA,IAAI,EAAEL;AAFiB,GAAb,CAAL,CAIJM,IAJI,CAICC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJR,EAKJF,IALI,CAKCC,GAAG,IAAI;AACX,WAAOA,GAAP;AACD,GAPI,EAQJE,KARI,CAQEC,GAAG,IAAId,OAAO,CAACe,KAAR,CAAcD,GAAd,CART,CAAP;AASD","sourcesContent":["export const uploadService = {\r\n  uploadImg\r\n}\r\nfunction uploadImg(ev) {\r\n  const CLOUD_NAME = \"dwdpgwxqv\"\r\n  const UPLOAD_PRESET = \"mthqhg3r\"\r\n  const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n  console.log(' ev.target.files[0]', ev.target.files[0])\r\n\r\n  const formData = new FormData();\r\n  formData.append('upload_preset', UPLOAD_PRESET);\r\n  formData.append('file', ev.target.files[0])\r\n\r\n  return fetch(UPLOAD_URL, {\r\n    method: 'POST',\r\n    body: formData\r\n  })\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      return res\r\n    })\r\n    .catch(err => console.error(err))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}