{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05DC\\u05D3\\u05D3\\\\Desktop\\\\Sprint4\\\\frontend\\\\src\\\\cmps\\\\popover-cmp.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ReactComponent as CloseDynamicCmp } from '../assets/img/close-task-form.svg';\nimport { ReactComponent as ActivityIcon } from '../assets/img/activity-icon.svg';\nimport { category, imagesCategory, popoverColorsConsts } from \"../const/board-list-consts\";\nimport { updateBoard } from \"../store/board.actions\";\nimport { ReactComponent as GoBackIcon } from '../assets/img/go-back-label-icon.svg';\nimport { Link } from \"react-router-dom\";\nimport { utilService } from \"../services/util.service\";\nimport moment from \"moment/moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Popover = ({\n  board\n}) => {\n  _s();\n\n  const dispacth = useDispatch();\n  const [isColors, setIsColors] = useState(false);\n  const [isImages, setIsImages] = useState(false);\n  const [isCategory, setCategory] = useState('');\n  const user = useSelector(state => state.userModule.user);\n  const classPopover = board.isPopoverShown ? \"popover-container open\" : \"popover-container\";\n\n  const onShownPopover = () => {\n    board.isPopoverShown = !board.isPopoverShown;\n    const boardToUpdate = { ...board\n    };\n    dispacth(updateBoard(boardToUpdate));\n  };\n\n  const onChangeColor = color => {\n    const newBoard = structuredClone(board);\n    newBoard.style.bgImg = color;\n    dispacth(updateBoard(newBoard));\n  };\n\n  const onGoBack = () => {\n    setIsImages(true);\n    setCategory('');\n  };\n\n  const onChangeCategory = categoryName => {\n    setIsImages(false);\n    setCategory(categoryName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classPopover,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popover-header\",\n        children: [!isColors && !isImages && !isCategory && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 59\n        }, this), isImages && !isColors && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"colors-header-popover\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"go-back-popover\",\n            onClick: () => setIsImages(false),\n            children: /*#__PURE__*/_jsxDEV(GoBackIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 152\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 83\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 174\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 43\n        }, this), isColors && !isImages && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"colors-header-popover\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"go-back-popover\",\n            onClick: () => setIsColors(false),\n            children: /*#__PURE__*/_jsxDEV(GoBackIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 152\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 83\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Colors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 174\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 43\n        }, this), !isColors && !isImages && isCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"colors-header-popover\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"go-back-popover\",\n            onClick: onGoBack,\n            children: /*#__PURE__*/_jsxDEV(GoBackIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 151\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 98\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: isCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 173\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 58\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onShownPopover,\n          className: \"close-btn-popover\",\n          children: /*#__PURE__*/_jsxDEV(CloseDynamicCmp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popover-main-content\",\n      children: [!isColors && !isImages && !isCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-colors-popover\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setIsColors(true),\n          className: \"colors-popover\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: 'https://skello.herokuapp.com/static/media/color-teaser-sidebar.ec32a2ed8dd8198b8ef0.jpg'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 84\n          }, this), \"Colors\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setIsImages(true),\n          className: \"imgs-popover\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: 'https://skello.herokuapp.com/static/media/imgs-teaser-sidebar.8f9c1323c9c16601a9a4.jpg'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 81\n          }, this), \"Images\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 55\n      }, this), isColors && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"colors-container-popover\",\n        children: popoverColorsConsts.map(color => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => onChangeColor(color),\n            className: \"color-container\",\n            style: {\n              backgroundColor: color\n            },\n            children: \" \"\n          }, color, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), isImages && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"colors-container-popover\",\n        children: category.map(category => {\n          let urlImg = `url(${category.bgImage})`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-category-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => onChangeCategory(category.name),\n              className: \"color-container\",\n              style: {\n                backgroundImage: urlImg\n              },\n              children: \"  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, category.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), isCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"colors-container-popover\",\n        children: imagesCategory[isCategory].map(bgImgUrl => {\n          let urlImg = `url(${bgImgUrl})`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-category-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => onChangeColor(urlImg),\n              className: \"color-container\",\n              style: {\n                backgroundImage: urlImg\n              },\n              children: \"  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)\n          }, bgImgUrl, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), !isCategory && !isImages && !isColors && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"activity-popover\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(ActivityIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 90\n        }, this), \" Activities\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 55\n      }, this), !isCategory && !isImages && !isColors && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"activities-container\",\n        children: board.activities.map(activity => {\n          var _activity$byMember, _activity$byMember2, _activity$byMember3;\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-container\",\n            children: [activity !== null && activity !== void 0 && (_activity$byMember = activity.byMember) !== null && _activity$byMember !== void 0 && _activity$byMember.imgUrl ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"img-user-activity\",\n                src: `${activity === null || activity === void 0 ? void 0 : (_activity$byMember2 = activity.byMember) === null || _activity$byMember2 === void 0 ? void 0 : _activity$byMember2.imgUrl}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 59\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 53\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar-img-guest-popover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"activity-info-time\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"activity-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"user-name\",\n                  children: activity === null || activity === void 0 ? void 0 : (_activity$byMember3 = activity.byMember) === null || _activity$byMember3 === void 0 ? void 0 : _activity$byMember3.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"activity-task-name\",\n                  children: activity.txt\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 33\n                }, this), activity.txt !== 'deleted task' ? /*#__PURE__*/_jsxDEV(Link, {\n                  to: `${activity.groupId}/${activity.task.id}`,\n                  children: [\" \", activity.task.title, \"  \"]\n                }, activity.task.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 68\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: activity.task.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 178\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"time-ago\",\n                children: [moment(activity.createdAt).fromNow(), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this)]\n          }, activity.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 55\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Popover, \"eACGcoB7hQCv0gnR4NSyP7lEDMg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Popover;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popover\");","map":{"version":3,"sources":["C:/Users/אלדד/Desktop/Sprint4/frontend/src/cmps/popover-cmp.jsx"],"names":["useState","useDispatch","useSelector","ReactComponent","CloseDynamicCmp","ActivityIcon","category","imagesCategory","popoverColorsConsts","updateBoard","GoBackIcon","Link","utilService","moment","Popover","board","dispacth","isColors","setIsColors","isImages","setIsImages","isCategory","setCategory","user","state","userModule","classPopover","isPopoverShown","onShownPopover","boardToUpdate","onChangeColor","color","newBoard","structuredClone","style","bgImg","onGoBack","onChangeCategory","categoryName","map","backgroundColor","urlImg","bgImage","name","backgroundImage","bgImgUrl","activities","activity","byMember","imgUrl","username","txt","groupId","task","id","title","createdAt","fromNow"],"mappings":"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","sourcesContent":["import { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { ReactComponent as CloseDynamicCmp } from '../assets/img/close-task-form.svg'\r\nimport { ReactComponent as ActivityIcon } from '../assets/img/activity-icon.svg'\r\nimport { category, imagesCategory, popoverColorsConsts } from \"../const/board-list-consts\"\r\nimport { updateBoard } from \"../store/board.actions\"\r\nimport { ReactComponent as GoBackIcon } from '../assets/img/go-back-label-icon.svg'\r\nimport { Link } from \"react-router-dom\"\r\nimport { utilService } from \"../services/util.service\"\r\nimport moment from \"moment/moment\"\r\n\r\nexport const Popover = ({ board }) => {\r\n    const dispacth = useDispatch()\r\n    const [isColors, setIsColors] = useState(false)\r\n    const [isImages, setIsImages] = useState(false)\r\n    const [isCategory, setCategory] = useState('')\r\n    const user = useSelector(state => state.userModule.user)\r\n\r\n\r\n\r\n\r\n    const classPopover = board.isPopoverShown ? \"popover-container open\" : \"popover-container\"\r\n\r\n    const onShownPopover = () => {\r\n        board.isPopoverShown = !board.isPopoverShown\r\n        const boardToUpdate = { ...board }\r\n        dispacth(updateBoard(boardToUpdate))\r\n    }\r\n\r\n    const onChangeColor = (color) => {\r\n        const newBoard = structuredClone(board)\r\n        newBoard.style.bgImg = color\r\n        dispacth(updateBoard(newBoard))\r\n    }\r\n    const onGoBack = () => {\r\n        setIsImages(true)\r\n        setCategory('')\r\n    }\r\n\r\n    const onChangeCategory = (categoryName) => {\r\n        setIsImages(false)\r\n        setCategory(categoryName)\r\n    }\r\n\r\n    return <section className={classPopover}>\r\n        <div>\r\n\r\n\r\n            <div className=\"popover-header\">\r\n                {!isColors && !isImages && !isCategory && <span>Menu</span>}\r\n                {isImages && !isColors && <div className=\"colors-header-popover\"> <span className=\"go-back-popover\" onClick={() => setIsImages(false)}><GoBackIcon /></span> <span>Images</span> </div>}\r\n                {isColors && !isImages && <div className=\"colors-header-popover\"> <span className=\"go-back-popover\" onClick={() => setIsColors(false)}><GoBackIcon /></span> <span>Colors</span> </div>}\r\n                {!isColors && !isImages && isCategory && <div className=\"colors-header-popover\"> <span className=\"go-back-popover\" onClick={onGoBack}><GoBackIcon /></span> <span>{isCategory}</span> </div>}\r\n                <button onClick={onShownPopover} className=\"close-btn-popover\"><CloseDynamicCmp /></button>\r\n            </div>\r\n        </div>\r\n        <div className=\"popover-main-content\">\r\n            {!isColors && !isImages && !isCategory && <div className=\"img-colors-popover\">\r\n\r\n                <div onClick={() => setIsColors(true)} className=\"colors-popover\"> <img src={'https://skello.herokuapp.com/static/media/color-teaser-sidebar.ec32a2ed8dd8198b8ef0.jpg'} />Colors</div>\r\n                <div onClick={() => setIsImages(true)} className=\"imgs-popover\"><img src={'https://skello.herokuapp.com/static/media/imgs-teaser-sidebar.8f9c1323c9c16601a9a4.jpg'} />Images</div>\r\n\r\n            </div>}\r\n\r\n\r\n            {isColors &&\r\n                <div className=\"colors-container-popover\">\r\n                    {popoverColorsConsts.map(color => {\r\n                        return <div onClick={() => onChangeColor(color)} key={color} className='color-container' style={{ backgroundColor: color }} > </div>\r\n                    })}\r\n\r\n                </div>\r\n            }\r\n\r\n            {isImages &&\r\n                <div className=\"colors-container-popover\">\r\n                    {category.map(category => {\r\n                        let urlImg = `url(${category.bgImage})`\r\n                        return <div key={category.name} className=\"image-category-container\">\r\n                            <div onClick={() => onChangeCategory(category.name)} className='color-container' style={{ backgroundImage: urlImg }} >  </div>\r\n                            <span>{category.name}</span>\r\n                        </div>\r\n                    })}\r\n\r\n                </div>\r\n            }\r\n            {isCategory &&\r\n                <div className=\"colors-container-popover\">\r\n                    {imagesCategory[isCategory].map(bgImgUrl => {\r\n                        let urlImg = `url(${bgImgUrl})`\r\n                        return <div key={bgImgUrl} className=\"image-category-container\">\r\n                            <div onClick={() => onChangeColor(urlImg)} className='color-container' style={{ backgroundImage: urlImg }} >  </div>\r\n\r\n                        </div>\r\n                    })}\r\n\r\n                </div>\r\n            }\r\n            {!isCategory && !isImages && !isColors && <div className=\"activity-popover\"> <ActivityIcon /> Activities</div>}\r\n\r\n            {!isCategory && !isImages && !isColors && <section className=\"activities-container\">\r\n\r\n                {board.activities.map(activity => {\r\n                    return <div key={activity.id} className=\"activity-container\">\r\n                      {activity?.byMember?.imgUrl?  <div ><img className=\"img-user-activity\" src={`${activity?.byMember?.imgUrl}`} /></div> :\r\n                       <div  className='avatar-img-guest-popover'></div>}\r\n                        <div className=\"activity-info-time\">\r\n\r\n                            <div className=\"activity-info\">\r\n                                <span className=\"user-name\">{activity?.byMember?.username}</span>\r\n                                <span className=\"activity-task-name\">{activity.txt}</span>\r\n                                {activity.txt !== 'deleted task' ? <Link to={`${activity.groupId}/${activity.task.id}`} key={activity.task.id}> {activity.task.title}  </Link> : <span>{activity.task.title}</span>}\r\n                            </div>\r\n                            <span className=\"time-ago\">{moment(activity.createdAt).fromNow()} </span>\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </section>}\r\n            \r\n\r\n\r\n        </div>\r\n    </section>\r\n}"]},"metadata":{},"sourceType":"module"}