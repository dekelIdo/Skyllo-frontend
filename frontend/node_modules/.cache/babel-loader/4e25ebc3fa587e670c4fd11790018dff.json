{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05DC\\u05D3\\u05D3\\\\Desktop\\\\Sprint4\\\\frontend\\\\src\\\\cmps\\\\dynamic-cmps\\\\cover-cmp.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { detailsColorsConsts, detailsImgConsts, workspaceImgConsts } from \"../../const/board-list-consts\";\nimport { saveTask } from \"../../store/board.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CoverCmp = ({\n  task,\n  setTask\n}) => {\n  _s();\n\n  var _task$cover, _task$cover2, _task$cover3, _task$cover4, _task$cover5, _task$cover6, _task$cover7, _task$cover8, _task$cover9;\n\n  const [bgColorExmpel, setBgColorExmpel] = useState(`url(${(_task$cover = task.cover) === null || _task$cover === void 0 ? void 0 : _task$cover.color})`);\n  const [bgColorTextExmple, setBgColorTextExmple] = useState(`url(${(_task$cover2 = task.cover) === null || _task$cover2 === void 0 ? void 0 : _task$cover2.color})`);\n  console.log('task.cover?.color', (_task$cover3 = task.cover) === null || _task$cover3 === void 0 ? void 0 : _task$cover3.color);\n  const [text, setText] = useState('');\n  const [isFullCover, setFullCover] = useState((_task$cover4 = task.cover) === null || _task$cover4 === void 0 ? void 0 : _task$cover4.isFullCover);\n  const [isDark, setIsDark] = useState((_task$cover5 = task.cover) === null || _task$cover5 === void 0 ? void 0 : _task$cover5.isDark);\n  let backgroundStyle = (bgColorExmpel === null || bgColorExmpel === void 0 ? void 0 : bgColorExmpel.length) > 9 ? 'backgroundImage' : 'backgroundColor';\n  const classBtn = text ? 'btn-create-board filled ' : \"btn-create-board\";\n  let coverChoice = isFullCover ? \"coverd-choice choice\" : \"coverd-choice  \";\n  const dispatch = useDispatch();\n\n  const onChangeColor = (color, ev) => {\n    ev.preventDefault();\n    ev.stopPropagation();\n    ev.preventDefault();\n    const newColor = color.length > 9 ? `url(${color})` : color;\n    setBgColorExmpel(newColor);\n    setBgColorTextExmple(newColor);\n    const taskToUpdate = { ...task,\n      cover: { ...task.cover,\n        color\n      }\n    }; // dispatch(saveTask(taskToUpdate))\n\n    setTask(taskToUpdate);\n  };\n\n  const onCoverSelected = isCover => {\n    console.log('isCover', isCover);\n    console.log('isFullCover', isFullCover);\n    setFullCover(isCover);\n    const taskToUpdate = { ...task,\n      cover: { ...task.cover,\n        isFullCover: isCover\n      }\n    };\n    setTask(taskToUpdate);\n  };\n\n  const changeHandel = ev => {\n    ev.preventDefault();\n    ev.stopPropagation();\n    setText(ev.target.value);\n    console.log(text, 'tetx');\n  };\n\n  const onTasktCoverSelected = isDarked => {\n    if (isDarked) {\n      setBgColorTextExmple(`linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),${bgColorExmpel}`);\n    } else if (!isDarked) {\n      setBgColorTextExmple(`linear-gradient(rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.5)),${bgColorExmpel}`);\n    }\n\n    console.log('isCover', isDarked);\n    const taskToUpdate = { ...task,\n      cover: { ...task.cover,\n        isDark: isDarked\n      }\n    };\n    setTask(taskToUpdate);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"cover-cmp\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cover-size-action\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => onCoverSelected(false),\n          className: isFullCover ? \"uncoverd-choice\" : \"uncoverd-choice choice \",\n          style: {\n            [backgroundStyle]: bgColorExmpel\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uncoverd-second-background\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"line-background big coverd\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"line-background coverd\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"square-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"circel\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"squaers\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"square-littel\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"square-littel\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => onCoverSelected(true),\n          className: coverChoice,\n          style: {\n            background: bgColorTextExmple\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"two-line-background\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: (_task$cover6 = task.cover) !== null && _task$cover6 !== void 0 && _task$cover6.isDark ? \"line-background big \" : \"line-background big dark \",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: (_task$cover7 = task.cover) !== null && _task$cover7 !== void 0 && _task$cover7.isDark ? \"line-background  \" : \"line-background  dark \",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), ((_task$cover8 = task.cover) === null || _task$cover8 === void 0 ? void 0 : _task$cover8.color) && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: ev => onChangeColor('', ev),\n      className: \"remove-btn filled\",\n      children: \"Remove Cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 31\n    }, this), ((_task$cover9 = task.cover) === null || _task$cover9 === void 0 ? void 0 : _task$cover9.isFullCover) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cover-size-action text\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => onTasktCoverSelected(true),\n        className: task.cover.isDark ? \"coverd-choice darken choice\" : \"coverd-choice darken\",\n        style: {\n          background: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),${bgColorExmpel}`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => onTasktCoverSelected(false),\n        className: task.cover.isDark ? \"coverd-choice bright\" : \"coverd-choice bright choice\",\n        style: {\n          background: `linear-gradient(rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.5)),${bgColorExmpel}`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Colors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"colors-container\",\n      children: detailsColorsConsts.map(color => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: ev => onChangeColor(color, ev),\n          className: \"color-container\",\n          style: {\n            backgroundColor: color\n          },\n          children: \" \"\n        }, color, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Photos from Unsplash\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imgs-littel-container\",\n      children: detailsImgConsts.map(img => {\n        let urlImg = `url(${img})`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: ev => onChangeColor(img, ev),\n          className: \"img-container\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: img,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 108\n          }, this)]\n        }, img, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Img from URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"text\",\n        type: \"text\",\n        onChange: changeHandel,\n        placeholder: \"Enter Img URL...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: ev => onChangeColor(text, ev),\n      className: classBtn,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CoverCmp, \"kS5HJ/d+xboJvoh/vS+adL6pqps=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CoverCmp;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoverCmp\");","map":{"version":3,"sources":["C:/Users/אלדד/Desktop/Sprint4/frontend/src/cmps/dynamic-cmps/cover-cmp.jsx"],"names":["useState","useSelector","useDispatch","useParams","detailsColorsConsts","detailsImgConsts","workspaceImgConsts","saveTask","CoverCmp","task","setTask","bgColorExmpel","setBgColorExmpel","cover","color","bgColorTextExmple","setBgColorTextExmple","console","log","text","setText","isFullCover","setFullCover","isDark","setIsDark","backgroundStyle","length","classBtn","coverChoice","dispatch","onChangeColor","ev","preventDefault","stopPropagation","newColor","taskToUpdate","onCoverSelected","isCover","changeHandel","target","value","onTasktCoverSelected","isDarked","background","title","map","backgroundColor","img","urlImg"],"mappings":"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","sourcesContent":["import { useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { detailsColorsConsts, detailsImgConsts, workspaceImgConsts } from \"../../const/board-list-consts\"\r\nimport { saveTask } from \"../../store/board.actions\"\r\n\r\nexport const CoverCmp = ({ task, setTask }) => {\r\n\r\n    const [bgColorExmpel, setBgColorExmpel] = useState(`url(${task.cover?.color})`)\r\n    const [bgColorTextExmple, setBgColorTextExmple] = useState(`url(${task.cover?.color})`)\r\n    console.log('task.cover?.color', task.cover?.color);\r\n    const [text, setText] = useState('')\r\n    const [isFullCover, setFullCover] = useState(task.cover?.isFullCover)\r\n    const [isDark, setIsDark] = useState(task.cover?.isDark)\r\n    let backgroundStyle = bgColorExmpel?.length > 9 ? 'backgroundImage' : 'backgroundColor'\r\n    const classBtn = text ? 'btn-create-board filled ' : \"btn-create-board\"\r\n    let coverChoice = isFullCover ? \"coverd-choice choice\" : \"coverd-choice  \"\r\n    const dispatch = useDispatch()\r\n    const onChangeColor = (color, ev) => {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        ev.preventDefault()\r\n        const newColor = color.length > 9 ? `url(${color})` : color\r\n        setBgColorExmpel(newColor)\r\n        setBgColorTextExmple(newColor)\r\n        const taskToUpdate = { ...task, cover: { ...task.cover, color } }\r\n        // dispatch(saveTask(taskToUpdate))\r\n\r\n        setTask(taskToUpdate)\r\n\r\n    }\r\n\r\n\r\n    const onCoverSelected = (isCover) => {\r\n        console.log('isCover', isCover)\r\n        console.log('isFullCover', isFullCover)\r\n        setFullCover(isCover)\r\n\r\n        const taskToUpdate = { ...task, cover: { ...task.cover, isFullCover: isCover } }\r\n        setTask(taskToUpdate)\r\n    }\r\n    const changeHandel = (ev) => {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n\r\n        setText(ev.target.value)\r\n        console.log(text, 'tetx')\r\n    }\r\n\r\n    const onTasktCoverSelected = (isDarked) => {\r\n        if (isDarked) {\r\n            setBgColorTextExmple(`linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),${bgColorExmpel}`)\r\n        } else if (!isDarked) {\r\n            setBgColorTextExmple(`linear-gradient(rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.5)),${bgColorExmpel}`)\r\n        }\r\n        console.log('isCover', isDarked)\r\n        const taskToUpdate = { ...task, cover: { ...task.cover, isDark: isDarked } }\r\n        setTask(taskToUpdate)\r\n\r\n    }\r\n\r\n    return <section className=\"cover-cmp\">\r\n\r\n        <div>\r\n\r\n            <span> Size</span>\r\n            <div className=\"cover-size-action\">\r\n\r\n                <div onClick={() => onCoverSelected(false)} className={isFullCover ? \"uncoverd-choice\" : \"uncoverd-choice choice \"} style={{ [backgroundStyle]: bgColorExmpel }}>\r\n                    <div className=\"uncoverd-second-background\" >\r\n                        <div className=\"line-background big coverd\" > </div>\r\n                        <div className=\"line-background coverd\" > </div>\r\n                        <div className=\"square-container\">\r\n                            <div>\r\n                                <div className=\"circel\" > </div>\r\n                            </div>\r\n                            <div className=\"squaers\">\r\n                                <div className=\"square-littel\" > </div>\r\n                                <div className=\"square-littel\" > </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div onClick={() => onCoverSelected(true)} className={coverChoice} style={{ background: bgColorTextExmple }}>\r\n                    <div className=\"two-line-background\" >\r\n                        <div className={task.cover?.isDark ? \"line-background big \" : \"line-background big dark \"} > </div>\r\n                        <div className={task.cover?.isDark ? \"line-background  \" : \"line-background  dark \"} > </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        {task.cover?.color && <button onClick={(ev) => onChangeColor('', ev)} className='remove-btn filled'>Remove Cover</button>}\r\n\r\n        {task.cover?.isFullCover && <div className=\"cover-size-action text\">\r\n            <div onClick={() => onTasktCoverSelected(true)} className={task.cover.isDark ? \"coverd-choice darken choice\" : \"coverd-choice darken\"} style={{ background: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),${bgColorExmpel}` }}>\r\n                <p>\r\n                    {task.title}\r\n                </p>\r\n            </div>\r\n            <div onClick={() => onTasktCoverSelected(false)} className={task.cover.isDark ? \"coverd-choice bright\" : \"coverd-choice bright choice\"} style={{ background: `linear-gradient(rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.5)),${bgColorExmpel}` }}>\r\n                <p>\r\n                    {task.title}\r\n                </p>\r\n            </div>\r\n        </div>}\r\n        <span>\r\n            Colors\r\n        </span>\r\n        <div className='colors-container' >\r\n            {detailsColorsConsts.map(color => {\r\n                return <div onClick={(ev) => onChangeColor(color, ev)} key={color} className='color-container' style={{ backgroundColor: color }} > </div>\r\n            })}\r\n        </div>\r\n\r\n        <span>\r\n            Photos from Unsplash\r\n        </span>\r\n        <div className='imgs-littel-container'>\r\n            {detailsImgConsts.map(img => {\r\n                let urlImg = `url(${img})`\r\n                return <div onClick={(ev) => onChangeColor(img, ev)} key={img} className='img-container' > <img src={img} alt='' /></div>\r\n            })}\r\n        </div>\r\n\r\n        <div className='input-text'>\r\n            <span>\r\n                Img from URL\r\n            </span>\r\n            <input id='text' type=\"text\" onChange={changeHandel} placeholder=\"Enter Img URL...\" />\r\n        </div>\r\n\r\n        <button onClick={(ev) => onChangeColor(text, ev)} className={classBtn}>Create</button>\r\n    </section >\r\n}"]},"metadata":{},"sourceType":"module"}