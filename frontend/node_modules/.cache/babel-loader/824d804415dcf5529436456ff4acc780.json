{"ast":null,"code":"import { showSuccessMsg } from '../services/event-bus.service';\nimport { reviewService } from '../services/review.service';\nimport { userService } from '../services/user.service'; // Action Creators\n\nexport function getActionRemoveReview(reviewId) {\n  return {\n    type: 'REMOVE_REVIEW',\n    reviewId\n  };\n}\nexport function getActionAddReview(review) {\n  return {\n    type: 'ADD_REVIEW',\n    review\n  };\n}\nexport function getActionSetWatchedUser(user) {\n  return {\n    type: 'SET_WATCHED_USER',\n    user\n  };\n}\nexport function loadReviews() {\n  return async dispatch => {\n    try {\n      const reviews = await reviewService.query();\n      dispatch({\n        type: 'SET_REVIEWS',\n        reviews\n      });\n    } catch (err) {\n      console.log('ReviewActions: err in loadReviews', err);\n    }\n  };\n}\nexport function addReview(review) {\n  return async dispatch => {\n    try {\n      const addedReview = await reviewService.add(review);\n      dispatch(getActionAddReview(addedReview)); // Change the score in user kept in sessionStorage\n      // userService.saveLocalUser(addedReview.byUser)\n      // const { score } = addedReview.byUser\n      // dispatch({ type: 'SET_SCORE', score })\n    } catch (err) {\n      console.log('ReviewActions: err in addReview', err);\n      throw err;\n    }\n  };\n}\nexport function removeReview(reviewId) {\n  return async dispatch => {\n    try {\n      await reviewService.remove(reviewId);\n      dispatch(getActionRemoveReview(reviewId));\n    } catch (err) {\n      console.log('ReviewActions: err in removeReview', err);\n      throw err;\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/אלדד/Desktop/Sprint4/frontend/src/store/review.actions.js"],"names":["showSuccessMsg","reviewService","userService","getActionRemoveReview","reviewId","type","getActionAddReview","review","getActionSetWatchedUser","user","loadReviews","dispatch","reviews","query","err","console","log","addReview","addedReview","add","removeReview","remove"],"mappings":"AAAA,SAASA,cAAT,QAA+B,+BAA/B;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,WAAT,QAA4B,0BAA5B,C,CAEA;;AACA,OAAO,SAASC,qBAAT,CAA+BC,QAA/B,EAAyC;AAC9C,SAAO;AAAEC,IAAAA,IAAI,EAAE,eAAR;AAAyBD,IAAAA;AAAzB,GAAP;AACD;AACD,OAAO,SAASE,kBAAT,CAA4BC,MAA5B,EAAoC;AACzC,SAAO;AAAEF,IAAAA,IAAI,EAAE,YAAR;AAAsBE,IAAAA;AAAtB,GAAP;AACD;AACD,OAAO,SAASC,uBAAT,CAAiCC,IAAjC,EAAuC;AAC5C,SAAO;AAAEJ,IAAAA,IAAI,EAAE,kBAAR;AAA4BI,IAAAA;AAA5B,GAAP;AACD;AAED,OAAO,SAASC,WAAT,GAAuB;AAC5B,SAAO,MAAMC,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMC,OAAO,GAAG,MAAMX,aAAa,CAACY,KAAd,EAAtB;AACAF,MAAAA,QAAQ,CAAC;AAAEN,QAAAA,IAAI,EAAE,aAAR;AAAuBO,QAAAA;AAAvB,OAAD,CAAR;AAED,KAJD,CAIE,OAAOE,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDF,GAAjD;AACD;AACF,GARD;AASD;AAED,OAAO,SAASG,SAAT,CAAmBV,MAAnB,EAA2B;AAChC,SAAO,MAAMI,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMO,WAAW,GAAG,MAAMjB,aAAa,CAACkB,GAAd,CAAkBZ,MAAlB,CAA1B;AACAI,MAAAA,QAAQ,CAACL,kBAAkB,CAACY,WAAD,CAAnB,CAAR,CAFE,CAIF;AACA;AACA;AACA;AAED,KATD,CASE,OAAOJ,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CF,GAA/C;AACA,YAAMA,GAAN;AACD;AACF,GAdD;AAeD;AAED,OAAO,SAASM,YAAT,CAAsBhB,QAAtB,EAAgC;AACrC,SAAO,MAAMO,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMV,aAAa,CAACoB,MAAd,CAAqBjB,QAArB,CAAN;AACAO,MAAAA,QAAQ,CAACR,qBAAqB,CAACC,QAAD,CAAtB,CAAR;AACD,KAHD,CAGE,OAAOU,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDF,GAAlD;AACA,YAAMA,GAAN;AACD;AACF,GARD;AASD","sourcesContent":["import { showSuccessMsg } from '../services/event-bus.service'\r\nimport { reviewService } from '../services/review.service'\r\nimport { userService } from '../services/user.service'\r\n\r\n// Action Creators\r\nexport function getActionRemoveReview(reviewId) {\r\n  return { type: 'REMOVE_REVIEW', reviewId }\r\n}\r\nexport function getActionAddReview(review) {\r\n  return { type: 'ADD_REVIEW', review }\r\n}\r\nexport function getActionSetWatchedUser(user) {\r\n  return { type: 'SET_WATCHED_USER', user }\r\n}\r\n\r\nexport function loadReviews() {\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query()\r\n      dispatch({ type: 'SET_REVIEWS', reviews })\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadReviews', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedReview = await reviewService.add(review)\r\n      dispatch(getActionAddReview(addedReview))\r\n\r\n      // Change the score in user kept in sessionStorage\r\n      // userService.saveLocalUser(addedReview.byUser)\r\n      // const { score } = addedReview.byUser\r\n      // dispatch({ type: 'SET_SCORE', score })\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in addReview', err)\r\n      throw err\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeReview(reviewId) {\r\n  return async dispatch => {\r\n    try {\r\n      await reviewService.remove(reviewId)\r\n      dispatch(getActionRemoveReview(reviewId))\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in removeReview', err)\r\n      throw err\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}