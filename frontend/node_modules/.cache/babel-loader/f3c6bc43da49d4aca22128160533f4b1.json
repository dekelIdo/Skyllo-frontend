{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05DC\\u05D3\\u05D3\\\\Desktop\\\\Sprint4\\\\frontend\\\\src\\\\cmps\\\\dynamic-cmps\\\\attachment-cmp.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { uploadService } from \"../../services/upload.service\";\nimport { utilService } from \"../../services/util.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AttachmentCmp = ({\n  task,\n  setTask\n}) => {\n  _s();\n\n  const [text, setText] = useState('');\n  const [textTitle, setTitleUrl] = useState('');\n\n  const onChangehandel = () => {\n    // setText(text)\n    const urlNotImg = text.includes();\n    if (!task.attachments) task.attachments = [];\n    const taskToUpdate = { ...task,\n      attachments: [...task.attachments, createAttachment(textTitle, text)]\n    };\n    if (!textTitle) return;\n    setTask(taskToUpdate);\n  };\n\n  const onUploadImg = async ev => {\n    try {\n      const data = await uploadService.uploadImg(ev);\n      console.log(data.secure_url);\n      if (!task.attachments) task.attachments = [];\n      const taskToUpdate = { ...task,\n        attachments: [...task.attachments, createAttachment(data.original_filename, data.secure_url)]\n      };\n      setTask(taskToUpdate);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const createAttachment = (title, url) => {\n    return {\n      id: utilService.makeId(),\n      title: title,\n      url: url,\n      isCover: false,\n      isEdit: false,\n      createdAt: new Date()\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"attachment-cmp\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-source\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-computer-upload\",\n        type: \"file\",\n        onChange: onUploadImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 40\n      }, this), \"Computer\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"source\",\n        children: \"Attach a link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"\",\n        id: \"source\",\n        placeholder: \"Paste link here\",\n        onChange: ev => setText(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), text && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Link name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"\",\n          id: \"title\",\n          placeholder: \"Paste title here\",\n          onChange: ev => setTitleUrl(ev.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attach-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onChangehandel(),\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AttachmentCmp, \"qC9za6iZBvmfGWqCFFfNWIvZTNU=\");\n\n_c = AttachmentCmp;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttachmentCmp\");","map":{"version":3,"sources":["C:/Users/אלדד/Desktop/Sprint4/frontend/src/cmps/dynamic-cmps/attachment-cmp.jsx"],"names":["useState","uploadService","utilService","AttachmentCmp","task","setTask","text","setText","textTitle","setTitleUrl","onChangehandel","urlNotImg","includes","attachments","taskToUpdate","createAttachment","onUploadImg","ev","data","uploadImg","console","log","secure_url","original_filename","err","title","url","id","makeId","isCover","isEdit","createdAt","Date","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\"\r\nimport { uploadService } from \"../../services/upload.service\"\r\nimport { utilService } from \"../../services/util.service\"\r\n\r\n\r\nexport const AttachmentCmp = ({ task, setTask }) => {\r\n\r\n    const [text, setText] = useState('')\r\n    const [textTitle, setTitleUrl] = useState('')\r\n\r\n\r\n    const onChangehandel = () => {\r\n        // setText(text)\r\n        const urlNotImg= text.includes()\r\n        if (!task.attachments) task.attachments = []\r\n\r\n        const taskToUpdate = {\r\n            ...task, attachments: [...task.attachments, createAttachment(textTitle, text)]\r\n        }\r\n        if (!textTitle) return\r\n        setTask(taskToUpdate)\r\n    }\r\n   \r\n    const onUploadImg = async (ev) => {\r\n        try {\r\n            const data = await uploadService.uploadImg(ev)\r\n            console.log(data.secure_url);\r\n            if (!task.attachments) task.attachments = []\r\n            const taskToUpdate = {\r\n                ...task, attachments: [...task.attachments, createAttachment(data.original_filename, data.secure_url)]\r\n            }\r\n            setTask(taskToUpdate)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n    }\r\n    const createAttachment = (title, url) => {\r\n        return {\r\n            id: utilService.makeId(),\r\n            title: title,\r\n            url: url,\r\n            isCover: false,\r\n            isEdit: false,\r\n            createdAt: new Date(),\r\n        }\r\n    }\r\n\r\n    return <section className=\"attachment-cmp\">\r\n        <div className=\"upload-source\"><input className=\"input-computer-upload\" type=\"file\" onChange={onUploadImg} />\r\n            Computer</div>\r\n        <div className=\"upload-input\">\r\n            <label htmlFor=\"source\">Attach a link</label>\r\n\r\n            <input type=\"text\" name=\"\" id=\"source\" placeholder=\"Paste link here\" onChange={(ev) => setText(ev.target.value)} />\r\n            {text && <div>\r\n                <label htmlFor=\"title\">Link name</label>\r\n                <input type=\"text\" name=\"\" id=\"title\" placeholder=\"Paste title here\" onChange={(ev) => setTitleUrl(ev.target.value)} />\r\n            </div>}\r\n        </div>\r\n\r\n        <div className=\"attach-btn\">\r\n            <button onClick={() => onChangehandel()} >Create</button>\r\n        </div>\r\n\r\n    </section>\r\n\r\n}"]},"metadata":{},"sourceType":"module"}