{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dekel\\\\Desktop\\\\Trellor\\\\Sprint4\\\\frontend\\\\src\\\\cmps\\\\task-preview.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { boardService } from \"../services/board.service\";\nimport { updateBoard } from \"../store/board.actions\";\nimport { TaskDetails } from \"./task-details\"; //charecters icons\n\nimport { ReactComponent as AttachmentIcon } from '../assets/img/attachmaent-iconbig.svg';\nimport { ReactComponent as ChecklistIcon } from '../assets/img/checklist-icon.svg';\nimport { ReactComponent as DescriptionIcon } from '../assets/img/description-icon.svg';\nimport { ReactComponent as EditTaskIcon } from '../assets/img/edit-icon-task.svg';\nimport { ReactComponent as DueDate } from '../assets/img/due-date-preview-icon.svg';\nimport { MiniEdit } from \"./mini-edit-cmp\";\nimport { utilService } from \"../services/util.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TaskPreview({\n  task,\n  group\n}) {\n  _s();\n\n  var _task$cover, _task$cover2, _task$cover2$color, _task$cover13, _task$cover14, _task$cover15, _task$cover16;\n\n  const [mouseClickLocation, setMouseClickLocation] = useState(null);\n  const board = useSelector(state => state.boardModule.board);\n  const labelsOpen = board.toggleLabels;\n  const [isMiniEditShown, setIsMiniEditShown] = useState(false);\n  const [taskLabels, setTaskLabels] = useState();\n  const [taskMembers, setTaskMembers] = useState();\n  const [taskAttachments, setTaskAttachments] = useState();\n  const [taskChecklists, setTaskChecklists] = useState();\n  const dispatch = useDispatch(); //task-cover\n\n  const [coverTask, setCoverTask] = useState('');\n  const [coverTaskUpper, setCoverTaskUpper] = useState('');\n  const [bgColor, setBgColor] = useState((_task$cover = task.cover) !== null && _task$cover !== void 0 && _task$cover.color ? `url(${task.cover.color})` : '');\n  const [backgroundStyle, setBackgroundStyle] = useState(((_task$cover2 = task.cover) === null || _task$cover2 === void 0 ? void 0 : (_task$cover2$color = _task$cover2.color) === null || _task$cover2$color === void 0 ? void 0 : _task$cover2$color.length) > 9 ? 'backgroundImage' : 'backgroundColor');\n  const [heightImg, setHeightImg] = useState('');\n  const [textColor, setTextColor] = useState('');\n  const [taskTitlePos, setTaskTitlePos] = useState('task-title');\n\n  const loadTaskCover = () => {\n    var _task$cover3, _task$cover3$color, _task$cover4, _task$cover4$color;\n\n    setBackgroundStyle(((_task$cover3 = task.cover) === null || _task$cover3 === void 0 ? void 0 : (_task$cover3$color = _task$cover3.color) === null || _task$cover3$color === void 0 ? void 0 : _task$cover3$color.length) > 9 ? 'backgroundImage' : 'backgroundColor');\n\n    if (((_task$cover4 = task.cover) === null || _task$cover4 === void 0 ? void 0 : (_task$cover4$color = _task$cover4.color) === null || _task$cover4$color === void 0 ? void 0 : _task$cover4$color.length) > 9) {\n      var _task$cover5, _task$cover6, _task$cover7;\n\n      setBgColor((_task$cover5 = task.cover) !== null && _task$cover5 !== void 0 && _task$cover5.color ? `url(${task.cover.color})` : '');\n      setHeightImg((_task$cover6 = task.cover) !== null && _task$cover6 !== void 0 && _task$cover6.isFullCover ? '192px' : '162px');\n      setTaskTitlePos((_task$cover7 = task.cover) !== null && _task$cover7 !== void 0 && _task$cover7.isFullCover ? 'task-title full ' : 'task-title ');\n\n      if (task.cover.isFullCover) {\n        var _task$cover8, _task$cover9, _task$cover10;\n\n        setCoverTask((_task$cover8 = task.cover) !== null && _task$cover8 !== void 0 && _task$cover8.isDark ? `linear-gradient(180deg,#00000080,#000)` : `linear-gradient(180deg,#ffffff80,#fff)`);\n        setTextColor((_task$cover9 = task.cover) !== null && _task$cover9 !== void 0 && _task$cover9.isDark ? '#ffff' : 'black');\n        setCoverTaskUpper((_task$cover10 = task.cover) !== null && _task$cover10 !== void 0 && _task$cover10.isDark ? ' linear-gradient(180deg,#0000,#00000080)' : ' linear-gradient(180deg,#fff0,#ffffff80)');\n      } else {\n        setTextColor('black');\n      }\n    } else {\n      var _task$cover11, _task$cover12;\n\n      setBgColor((_task$cover11 = task.cover) !== null && _task$cover11 !== void 0 && _task$cover11.color ? task.cover.color : '');\n      setHeightImg('32px');\n      setTaskTitlePos((_task$cover12 = task.cover) !== null && _task$cover12 !== void 0 && _task$cover12.isFullCover ? 'task-title text-full ' : 'task-title ');\n    }\n  };\n\n  const loadLabels = () => {\n    if (!task) return;\n    if (!task.labelIds) return;\n    const labelIds = task.labelIds;\n    const taskLabel = labelIds === null || labelIds === void 0 ? void 0 : labelIds.map(id => {\n      return boardService.getLabelsById(board, id);\n    });\n    return setTaskLabels(taskLabel);\n  };\n\n  const loadMembers = () => {\n    if (!task) return;\n    const membersIds = task.memberIds;\n    const taskMembers = membersIds === null || membersIds === void 0 ? void 0 : membersIds.map(id => {\n      return boardService.getMembersById(board, id);\n    });\n    return setTaskMembers(taskMembers);\n  };\n\n  useEffect(() => {\n    loadTaskCover();\n    loadLabels();\n    loadMembers();\n  }, [board, task]);\n\n  const onToggleLabels = ev => {\n    ev.preventDefault();\n    ev.stopPropagation();\n    const newBoard = { ...board,\n      toggleLabels: !board.toggleLabels\n    };\n    dispatch(updateBoard(newBoard));\n  };\n\n  const getMemberBackground = member => {\n    if (member.img) return `url(${member.img}) center center / cover`;else return `https://res.cloudinary.com/skello-dev-learning/image/upload/v1643564751/dl6faof1ecyjnfnknkla.svg) center center / cover;`;\n  };\n\n  const onClickMiniEdit = ev => {\n    ev.preventDefault();\n    ev.stopPropagation();\n    const mouseClickLocation = ev.target.getClientRects();\n    console.log('mouseClickLocation:', mouseClickLocation);\n\n    if (mouseClickLocation[0].y > 575) {\n      setMouseClickLocation(mouseClickLocation[0] - 200);\n    } else {\n      setMouseClickLocation(mouseClickLocation[0]);\n    }\n\n    setIsMiniEditShown(!isMiniEditShown);\n  };\n\n  const labelsClass = labelsOpen ? 'task-preview-label-preview-open' : 'task-preview-label-preview';\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: (_task$cover13 = task.cover) !== null && _task$cover13 !== void 0 && _task$cover13.isFullCover ? \"task-preview covered\" : \"task-preview \",\n    children: [/*#__PURE__*/_jsxDEV(EditTaskIcon, {\n      className: \"edit-task-preview-icon\",\n      onClick: onClickMiniEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isMiniEditShown && /*#__PURE__*/_jsxDEV(MiniEdit, {\n        task: task,\n        group: group,\n        board: board,\n        bgColor: bgColor,\n        onToggleLabels: onToggleLabels,\n        mouseLocation: mouseClickLocation,\n        setIsMiniEditShown: setIsMiniEditShown,\n        getMemberBackground: getMemberBackground\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this), isMiniEditShown && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"black-screen\",\n          onClick: onClickMiniEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), bgColor && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        [backgroundStyle]: bgColor,\n        height: heightImg\n      },\n      className: \"task-cover-background\",\n      children: ((_task$cover14 = task.cover) === null || _task$cover14 === void 0 ? void 0 : _task$cover14.isFullCover) && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cover-dark-up\",\n          style: {\n            background: coverTaskUpper\n          },\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cover-dark-task\",\n          style: {\n            background: coverTask\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this), taskLabels && !((_task$cover15 = task.cover) !== null && _task$cover15 !== void 0 && _task$cover15.isFullCover) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-preview-labels-list\",\n      children: taskLabels.map(label => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: onToggleLabels,\n          className: labelsClass,\n          style: {\n            backgroundColor: label.color\n          },\n          children: [labelsOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"labels-task-preview-mini-color\",\n            style: {\n              backgroundColor: utilService.lightenDarkenColor(label.color, -20)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 44\n          }, this), labelsOpen && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: label.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 44\n          }, this)]\n        }, label.color, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-preview-title\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: textColor\n        },\n        className: taskTitlePos,\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), !((_task$cover16 = task.cover) !== null && _task$cover16 !== void 0 && _task$cover16.isFullCover) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-preview-Characters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-preview-pins\",\n        children: [task.dueDate && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: task.dueDate.date < Date.now() ? 'task-preview-date-container overdue' : 'task-preview-date-container',\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-preview-date-pin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-preview-date-due\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: task.dueDate.dateToDisplay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this), task.description && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-preview-pin description-pin-preview \",\n          children: /*#__PURE__*/_jsxDEV(DescriptionIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 101\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 42\n        }, this), task.attachments && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-preview-pin \",\n          children: [/*#__PURE__*/_jsxDEV(AttachmentIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 77\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.attachments.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 96\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 42\n        }, this), task.checklists && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-preview-pin checklists-pin\",\n          children: [/*#__PURE__*/_jsxDEV(ChecklistIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 90\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.checklists.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 108\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-preview-pin activities-pin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-preview-members-container\",\n        children: taskMembers && taskMembers.map(member => {\n          {\n            return member.img ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-preview-member-box\",\n              style: {\n                background: getMemberBackground(member)\n              }\n            }, member._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 47\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar-img-guest-member-box-task-preview\"\n            }, member._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 166\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 42\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskPreview, \"G2M8oJdbr7llAumrZi15b+/+bY8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = TaskPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskPreview\");","map":{"version":3,"sources":["C:/Users/Dekel/Desktop/Trellor/Sprint4/frontend/src/cmps/task-preview.jsx"],"names":["useState","useEffect","useDispatch","useSelector","Link","boardService","updateBoard","TaskDetails","ReactComponent","AttachmentIcon","ChecklistIcon","DescriptionIcon","EditTaskIcon","DueDate","MiniEdit","utilService","TaskPreview","task","group","mouseClickLocation","setMouseClickLocation","board","state","boardModule","labelsOpen","toggleLabels","isMiniEditShown","setIsMiniEditShown","taskLabels","setTaskLabels","taskMembers","setTaskMembers","taskAttachments","setTaskAttachments","taskChecklists","setTaskChecklists","dispatch","coverTask","setCoverTask","coverTaskUpper","setCoverTaskUpper","bgColor","setBgColor","cover","color","backgroundStyle","setBackgroundStyle","length","heightImg","setHeightImg","textColor","setTextColor","taskTitlePos","setTaskTitlePos","loadTaskCover","isFullCover","isDark","loadLabels","labelIds","taskLabel","map","id","getLabelsById","loadMembers","membersIds","memberIds","getMembersById","onToggleLabels","ev","preventDefault","stopPropagation","newBoard","getMemberBackground","member","img","onClickMiniEdit","target","getClientRects","console","log","y","labelsClass","height","background","label","backgroundColor","lightenDarkenColor","title","dueDate","date","Date","now","dateToDisplay","description","attachments","checklists","_id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,WAAT,QAA4B,gBAA5B,C,CAGA;;AACA,SAASC,cAAc,IAAIC,cAA3B,QAAiD,uCAAjD;AACA,SAASD,cAAc,IAAIE,aAA3B,QAAgD,kCAAhD;AACA,SAASF,cAAc,IAAIG,eAA3B,QAAkD,oCAAlD;AACA,SAASH,cAAc,IAAII,YAA3B,QAA+C,kCAA/C;AACA,SAASJ,cAAc,IAAIK,OAA3B,QAA0C,yCAA1C;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,WAAT,QAA4B,0BAA5B;;AAEA,OAAO,SAASC,WAAT,CAAqB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAArB,EAAsC;AAAA;;AAAA;;AAEzC,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CpB,QAAQ,CAAC,IAAD,CAA5D;AAEA,QAAMqB,KAAK,GAAGlB,WAAW,CAACmB,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkBF,KAA5B,CAAzB;AACA,QAAMG,UAAU,GAAGH,KAAK,CAACI,YAAzB;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwC3B,QAAQ,CAAC,KAAD,CAAtD;AAEA,QAAM,CAAC4B,UAAD,EAAaC,aAAb,IAA8B7B,QAAQ,EAA5C;AACA,QAAM,CAAC8B,WAAD,EAAcC,cAAd,IAAgC/B,QAAQ,EAA9C;AACA,QAAM,CAACgC,eAAD,EAAkBC,kBAAlB,IAAwCjC,QAAQ,EAAtD;AACA,QAAM,CAACkC,cAAD,EAAiBC,iBAAjB,IAAsCnC,QAAQ,EAApD;AACA,QAAMoC,QAAQ,GAAGlC,WAAW,EAA5B,CAZyC,CAazC;;AACA,QAAM,CAACmC,SAAD,EAAYC,YAAZ,IAA4BtC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACuC,cAAD,EAAiBC,iBAAjB,IAAsCxC,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACyC,OAAD,EAAUC,UAAV,IAAwB1C,QAAQ,CAAC,eAAAiB,IAAI,CAAC0B,KAAL,oDAAYC,KAAZ,GAAqB,OAAM3B,IAAI,CAAC0B,KAAL,CAAWC,KAAM,GAA5C,GAAiD,EAAlD,CAAtC;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwC9C,QAAQ,CAAC,iBAAAiB,IAAI,CAAC0B,KAAL,oFAAYC,KAAZ,0EAAmBG,MAAnB,IAA4B,CAA5B,GAAgC,iBAAhC,GAAoD,iBAArD,CAAtD;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjD,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACkD,SAAD,EAAYC,YAAZ,IAA4BnD,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACoD,YAAD,EAAeC,eAAf,IAAkCrD,QAAQ,CAAC,YAAD,CAAhD;;AAEA,QAAMsD,aAAa,GAAG,MAAM;AAAA;;AACxBR,IAAAA,kBAAkB,CAAC,iBAAA7B,IAAI,CAAC0B,KAAL,oFAAYC,KAAZ,0EAAmBG,MAAnB,IAA4B,CAA5B,GAAgC,iBAAhC,GAAoD,iBAArD,CAAlB;;AACA,QAAI,iBAAA9B,IAAI,CAAC0B,KAAL,oFAAYC,KAAZ,0EAAmBG,MAAnB,IAA4B,CAAhC,EAAmC;AAAA;;AAC/BL,MAAAA,UAAU,CAAC,gBAAAzB,IAAI,CAAC0B,KAAL,sDAAYC,KAAZ,GAAqB,OAAM3B,IAAI,CAAC0B,KAAL,CAAWC,KAAM,GAA5C,GAAiD,EAAlD,CAAV;AACAK,MAAAA,YAAY,CAAC,gBAAAhC,IAAI,CAAC0B,KAAL,sDAAYY,WAAZ,GAA0B,OAA1B,GAAoC,OAArC,CAAZ;AACAF,MAAAA,eAAe,CAAC,gBAAApC,IAAI,CAAC0B,KAAL,sDAAYY,WAAZ,GAA0B,kBAA1B,GAA+C,aAAhD,CAAf;;AACA,UAAItC,IAAI,CAAC0B,KAAL,CAAWY,WAAf,EAA4B;AAAA;;AACxBjB,QAAAA,YAAY,CAAC,gBAAArB,IAAI,CAAC0B,KAAL,sDAAYa,MAAZ,GAAsB,wCAAtB,GAAiE,wCAAlE,CAAZ;AACAL,QAAAA,YAAY,CAAC,gBAAAlC,IAAI,CAAC0B,KAAL,sDAAYa,MAAZ,GAAqB,OAArB,GAA+B,OAAhC,CAAZ;AACAhB,QAAAA,iBAAiB,CAAC,iBAAAvB,IAAI,CAAC0B,KAAL,wDAAYa,MAAZ,GAAqB,0CAArB,GAAkE,0CAAnE,CAAjB;AACH,OAJD,MAIO;AACHL,QAAAA,YAAY,CAAC,OAAD,CAAZ;AACH;AACJ,KAXD,MAWO;AAAA;;AACHT,MAAAA,UAAU,CAAC,iBAAAzB,IAAI,CAAC0B,KAAL,wDAAYC,KAAZ,GAAoB3B,IAAI,CAAC0B,KAAL,CAAWC,KAA/B,GAAuC,EAAxC,CAAV;AACAK,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACAI,MAAAA,eAAe,CAAC,iBAAApC,IAAI,CAAC0B,KAAL,wDAAYY,WAAZ,GAA0B,uBAA1B,GAAoD,aAArD,CAAf;AACH;AACJ,GAlBD;;AAoBA,QAAME,UAAU,GAAG,MAAM;AACrB,QAAI,CAACxC,IAAL,EAAW;AACX,QAAI,CAACA,IAAI,CAACyC,QAAV,EAAoB;AACpB,UAAMA,QAAQ,GAAGzC,IAAI,CAACyC,QAAtB;AACA,UAAMC,SAAS,GAAGD,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEE,GAAV,CAAcC,EAAE,IAAI;AAClC,aAAOxD,YAAY,CAACyD,aAAb,CAA2BzC,KAA3B,EAAkCwC,EAAlC,CAAP;AACH,KAFiB,CAAlB;AAGA,WAAOhC,aAAa,CAAC8B,SAAD,CAApB;AACH,GARD;;AAUA,QAAMI,WAAW,GAAG,MAAM;AACtB,QAAI,CAAC9C,IAAL,EAAW;AACX,UAAM+C,UAAU,GAAG/C,IAAI,CAACgD,SAAxB;AACA,UAAMnC,WAAW,GAAGkC,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAEJ,GAAZ,CAAgBC,EAAE,IAAI;AACtC,aAAOxD,YAAY,CAAC6D,cAAb,CAA4B7C,KAA5B,EAAmCwC,EAAnC,CAAP;AACH,KAFmB,CAApB;AAGA,WAAO9B,cAAc,CAACD,WAAD,CAArB;AACH,GAPD;;AASA7B,EAAAA,SAAS,CAAC,MAAM;AACZqD,IAAAA,aAAa;AACbG,IAAAA,UAAU;AACVM,IAAAA,WAAW;AACd,GAJQ,EAIN,CAAC1C,KAAD,EAAQJ,IAAR,CAJM,CAAT;;AAMA,QAAMkD,cAAc,GAAIC,EAAD,IAAQ;AAC3BA,IAAAA,EAAE,CAACC,cAAH;AACAD,IAAAA,EAAE,CAACE,eAAH;AACA,UAAMC,QAAQ,GAAG,EAAE,GAAGlD,KAAL;AAAYI,MAAAA,YAAY,EAAE,CAACJ,KAAK,CAACI;AAAjC,KAAjB;AACAW,IAAAA,QAAQ,CAAC9B,WAAW,CAACiE,QAAD,CAAZ,CAAR;AACH,GALD;;AAOA,QAAMC,mBAAmB,GAAIC,MAAD,IAAY;AACpC,QAAIA,MAAM,CAACC,GAAX,EAAgB,OAAQ,OAAMD,MAAM,CAACC,GAAI,yBAAzB,CAAhB,KACK,OAAQ,0HAAR;AACR,GAHD;;AAKA,QAAMC,eAAe,GAAIP,EAAD,IAAQ;AAC5BA,IAAAA,EAAE,CAACC,cAAH;AACAD,IAAAA,EAAE,CAACE,eAAH;AAEA,UAAMnD,kBAAkB,GAAGiD,EAAE,CAACQ,MAAH,CAAUC,cAAV,EAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC5D,kBAAnC;;AAEA,QAAIA,kBAAkB,CAAC,CAAD,CAAlB,CAAsB6D,CAAtB,GAA0B,GAA9B,EAAmC;AAAE5D,MAAAA,qBAAqB,CAACD,kBAAkB,CAAC,CAAD,CAAlB,GAAsB,GAAvB,CAArB;AAAkD,KAAvF,MAEK;AACDC,MAAAA,qBAAqB,CAACD,kBAAkB,CAAC,CAAD,CAAnB,CAArB;AACH;;AACDQ,IAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACH,GAbD;;AAeA,QAAMuD,WAAW,GAAGzD,UAAU,GAAG,iCAAH,GAAuC,4BAArE;AAEA,sBACI;AAAS,IAAA,SAAS,EAAE,iBAAAP,IAAI,CAAC0B,KAAL,wDAAYY,WAAZ,GAA0B,sBAA1B,GAAmD,eAAvE;AAAA,4BACI,QAAC,YAAD;AAAc,MAAA,SAAS,EAAC,wBAAxB;AAAiD,MAAA,OAAO,EAAEoB;AAA1D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,iBACKjD,eAAe,iBACZ,QAAC,QAAD;AACI,QAAA,IAAI,EAAET,IADV;AAEI,QAAA,KAAK,EAAEC,KAFX;AAGI,QAAA,KAAK,EAAEG,KAHX;AAII,QAAA,OAAO,EAAEoB,OAJb;AAKI,QAAA,cAAc,EAAE0B,cALpB;AAMI,QAAA,aAAa,EAAEhD,kBANnB;AAOI,QAAA,kBAAkB,EAAEQ,kBAPxB;AAQI,QAAA,mBAAmB,EAAE6C;AARzB;AAAA;AAAA;AAAA;AAAA,cAFR,EAYK9C,eAAe,iBACZ;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,OAAO,EAAEiD;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAbR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAqBKlC,OAAO,iBACJ;AAAK,MAAA,KAAK,EAAE;AAAE,SAACI,eAAD,GAAmBJ,OAArB;AAA8ByC,QAAAA,MAAM,EAAElC;AAAtC,OAAZ;AAA+D,MAAA,SAAS,EAAC,uBAAzE;AAAA,gBACK,kBAAA/B,IAAI,CAAC0B,KAAL,gEAAYY,WAAZ,kBAA2B;AAAA,gCACxB;AAAK,UAAA,SAAS,EAAC,eAAf;AAA+B,UAAA,KAAK,EAAE;AAAE4B,YAAAA,UAAU,EAAE5C;AAAd,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADwB,eAExB;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAiC,UAAA,KAAK,EAAE;AAAE4C,YAAAA,UAAU,EAAE9C;AAAd;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAFwB;AAAA;AAAA;AAAA;AAAA;AAAA;AADhC;AAAA;AAAA;AAAA;AAAA,YAtBR,EA8BKT,UAAU,IAAI,mBAACX,IAAI,CAAC0B,KAAN,0CAAC,cAAYY,WAAb,CAAd,iBACG;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,gBACK3B,UAAU,CAACgC,GAAX,CAAewB,KAAK,IAAI;AACrB,4BAAO;AAAK,UAAA,OAAO,EAAEjB,cAAd;AAEH,UAAA,SAAS,EAAEc,WAFR;AAGH,UAAA,KAAK,EAAE;AAAEI,YAAAA,eAAe,EAAED,KAAK,CAACxC;AAAzB,WAHJ;AAAA,qBAIFpB,UAAU,iBAAI;AAAK,YAAA,SAAS,EAAC,gCAAf;AAAgD,YAAA,KAAK,EAAE;AAAE6D,cAAAA,eAAe,EAAEtE,WAAW,CAACuE,kBAAZ,CAA+BF,KAAK,CAACxC,KAArC,EAA4C,CAAC,EAA7C;AAAnB;AAAvD;AAAA;AAAA;AAAA;AAAA,kBAJZ,EAKFpB,UAAU,iBAAI;AAAA,sBAAO4D,KAAK,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA,kBALZ;AAAA,WACEH,KAAK,CAACxC,KADR;AAAA;AAAA;AAAA;AAAA,gBAAP;AAOH,OARA;AADL;AAAA;AAAA;AAAA;AAAA,YA/BR,eA4CI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACI;AAAG,QAAA,KAAK,EAAE;AAAEA,UAAAA,KAAK,EAAEM;AAAT,SAAV;AAAgC,QAAA,SAAS,EAAEE,YAA3C;AAAA,kBAA0DnC,IAAI,CAACsE;AAA/D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA5CJ,EA+CK,mBAACtE,IAAI,CAAC0B,KAAN,0CAAC,cAAYY,WAAb,kBAA4B;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,8BACzB;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,mBAEKtC,IAAI,CAACuE,OAAL,iBACG;AAAK,UAAA,SAAS,EAAEvE,IAAI,CAACuE,OAAL,CAAaC,IAAb,GAAoBC,IAAI,CAACC,GAAL,EAApB,GAAiC,qCAAjC,GAAyE,6BAAzF;AAAA,kCAEI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAKI;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACI;AAAA,wBAAO1E,IAAI,CAACuE,OAAL,CAAaI;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHR,EAaK3E,IAAI,CAAC4E,WAAL,iBAAoB;AAAK,UAAA,SAAS,EAAC,2CAAf;AAAA,iCAA2D,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAA3D;AAAA;AAAA;AAAA;AAAA,gBAbzB,EAcK5E,IAAI,CAAC6E,WAAL,iBAAoB;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,kCAAmC,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBAAnC,oBAAsD;AAAA,sBAAO7E,IAAI,CAAC6E,WAAL,CAAiB/C;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdzB,EAeK9B,IAAI,CAAC8E,UAAL,iBAAmB;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAA,kCAAiD,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,kBAAjD,oBAAmE;AAAA,sBAAO9E,IAAI,CAAC8E,UAAL,CAAgBhD;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfxB,eAgBI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADyB,eAoBzB;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA,kBACKjB,WAAW,IAAIA,WAAW,CAAC8B,GAAZ,CAAgBa,MAAM,IAAI;AACtC;AAAE,mBAAOA,MAAM,CAACC,GAAP,gBAAa;AAAK,cAAA,SAAS,EAAC,yBAAf;AAA0D,cAAA,KAAK,EAAE;AAAES,gBAAAA,UAAU,EAAEX,mBAAmB,CAACC,MAAD;AAAjC;AAAjE,eAA8CA,MAAM,CAACuB,GAArD;AAAA;AAAA;AAAA;AAAA,oBAAb,gBAAoI;AAAsB,cAAA,SAAS,EAAC;AAAhC,eAAUvB,MAAM,CAACuB,GAAjB;AAAA;AAAA;AAAA;AAAA,oBAA3I;AAA8N;AACnO,SAFe;AADpB;AAAA;AAAA;AAAA;AAAA,cApByB;AAAA;AAAA;AAAA;AAAA;AAAA,YA/CjC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4EH;;GA5KehF,W;UAIEb,W,EAQGD,W;;;KAZLc,W","sourcesContent":["import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { boardService } from \"../services/board.service\";\r\nimport { updateBoard } from \"../store/board.actions\";\r\nimport { TaskDetails } from \"./task-details\";\r\n\r\n\r\n//charecters icons\r\nimport { ReactComponent as AttachmentIcon } from '../assets/img/attachmaent-iconbig.svg'\r\nimport { ReactComponent as ChecklistIcon } from '../assets/img/checklist-icon.svg'\r\nimport { ReactComponent as DescriptionIcon } from '../assets/img/description-icon.svg'\r\nimport { ReactComponent as EditTaskIcon } from '../assets/img/edit-icon-task.svg'\r\nimport { ReactComponent as DueDate } from '../assets/img/due-date-preview-icon.svg'\r\nimport { MiniEdit } from \"./mini-edit-cmp\";\r\nimport { utilService } from \"../services/util.service\";\r\n\r\nexport function TaskPreview({ task, group }) {\r\n\r\n    const [mouseClickLocation, setMouseClickLocation] = useState(null)\r\n\r\n    const board = useSelector(state => state.boardModule.board)\r\n    const labelsOpen = board.toggleLabels\r\n    const [isMiniEditShown, setIsMiniEditShown] = useState(false)\r\n\r\n    const [taskLabels, setTaskLabels] = useState()\r\n    const [taskMembers, setTaskMembers] = useState()\r\n    const [taskAttachments, setTaskAttachments] = useState()\r\n    const [taskChecklists, setTaskChecklists] = useState()\r\n    const dispatch = useDispatch()\r\n    //task-cover\r\n    const [coverTask, setCoverTask] = useState('')\r\n    const [coverTaskUpper, setCoverTaskUpper] = useState('')\r\n    const [bgColor, setBgColor] = useState(task.cover?.color ? `url(${task.cover.color})` : '')\r\n    const [backgroundStyle, setBackgroundStyle] = useState(task.cover?.color?.length > 9 ? 'backgroundImage' : 'backgroundColor')\r\n    const [heightImg, setHeightImg] = useState('')\r\n    const [textColor, setTextColor] = useState('')\r\n    const [taskTitlePos, setTaskTitlePos] = useState('task-title')\r\n\r\n    const loadTaskCover = () => {\r\n        setBackgroundStyle(task.cover?.color?.length > 9 ? 'backgroundImage' : 'backgroundColor')\r\n        if (task.cover?.color?.length > 9) {\r\n            setBgColor(task.cover?.color ? `url(${task.cover.color})` : '')\r\n            setHeightImg(task.cover?.isFullCover ? '192px' : '162px')\r\n            setTaskTitlePos(task.cover?.isFullCover ? 'task-title full ' : 'task-title ')\r\n            if (task.cover.isFullCover) {\r\n                setCoverTask(task.cover?.isDark ? `linear-gradient(180deg,#00000080,#000)` : `linear-gradient(180deg,#ffffff80,#fff)`)\r\n                setTextColor(task.cover?.isDark ? '#ffff' : 'black')\r\n                setCoverTaskUpper(task.cover?.isDark ? ' linear-gradient(180deg,#0000,#00000080)' : ' linear-gradient(180deg,#fff0,#ffffff80)')\r\n            } else {\r\n                setTextColor('black')\r\n            }\r\n        } else {\r\n            setBgColor(task.cover?.color ? task.cover.color : '')\r\n            setHeightImg('32px')\r\n            setTaskTitlePos(task.cover?.isFullCover ? 'task-title text-full ' : 'task-title ')\r\n        }\r\n    }\r\n\r\n    const loadLabels = () => {\r\n        if (!task) return\r\n        if (!task.labelIds) return\r\n        const labelIds = task.labelIds\r\n        const taskLabel = labelIds?.map(id => {\r\n            return boardService.getLabelsById(board, id)\r\n        })\r\n        return setTaskLabels(taskLabel)\r\n    }\r\n\r\n    const loadMembers = () => {\r\n        if (!task) return\r\n        const membersIds = task.memberIds\r\n        const taskMembers = membersIds?.map(id => {\r\n            return boardService.getMembersById(board, id)\r\n        })\r\n        return setTaskMembers(taskMembers)\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadTaskCover()\r\n        loadLabels()\r\n        loadMembers()\r\n    }, [board, task])\r\n\r\n    const onToggleLabels = (ev) => {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n        const newBoard = { ...board, toggleLabels: !board.toggleLabels }\r\n        dispatch(updateBoard(newBoard))\r\n    }\r\n\r\n    const getMemberBackground = (member) => {\r\n        if (member.img) return `url(${member.img}) center center / cover`\r\n        else return `https://res.cloudinary.com/skello-dev-learning/image/upload/v1643564751/dl6faof1ecyjnfnknkla.svg) center center / cover;`\r\n    }\r\n\r\n    const onClickMiniEdit = (ev) => {\r\n        ev.preventDefault()\r\n        ev.stopPropagation()\r\n\r\n        const mouseClickLocation = ev.target.getClientRects()\r\n        console.log('mouseClickLocation:', mouseClickLocation)\r\n        \r\n        if (mouseClickLocation[0].y > 575) { setMouseClickLocation(mouseClickLocation[0]-200) }\r\n\r\n        else {\r\n            setMouseClickLocation(mouseClickLocation[0])\r\n        }\r\n        setIsMiniEditShown(!isMiniEditShown)\r\n    }\r\n\r\n    const labelsClass = labelsOpen ? 'task-preview-label-preview-open' : 'task-preview-label-preview'\r\n\r\n    return (\r\n        <section className={task.cover?.isFullCover ? \"task-preview covered\" : \"task-preview \"}>\r\n            <EditTaskIcon className=\"edit-task-preview-icon\" onClick={onClickMiniEdit} />\r\n            <div >\r\n                {isMiniEditShown &&\r\n                    <MiniEdit\r\n                        task={task}\r\n                        group={group}\r\n                        board={board}\r\n                        bgColor={bgColor}\r\n                        onToggleLabels={onToggleLabels}\r\n                        mouseLocation={mouseClickLocation}\r\n                        setIsMiniEditShown={setIsMiniEditShown}\r\n                        getMemberBackground={getMemberBackground} />\r\n                }\r\n                {isMiniEditShown &&\r\n                    <div>\r\n                        <div className='black-screen' onClick={onClickMiniEdit}>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            {bgColor &&\r\n                <div style={{ [backgroundStyle]: bgColor, height: heightImg }} className=\"task-cover-background\">\r\n                    {task.cover?.isFullCover && <div>\r\n                        <div className=\"cover-dark-up\" style={{ background: coverTaskUpper }}> </div>\r\n                        <div className=\"cover-dark-task\" style={{ background: coverTask }}></div>\r\n                    </div>}\r\n                </div>\r\n            }\r\n\r\n            {taskLabels && !task.cover?.isFullCover &&\r\n                <div className=\"task-preview-labels-list\">\r\n                    {taskLabels.map(label => {\r\n                        return <div onClick={onToggleLabels}\r\n                            key={label.color}\r\n                            className={labelsClass}\r\n                            style={{ backgroundColor: label.color }}>\r\n                            {labelsOpen && <div className='labels-task-preview-mini-color' style={{ backgroundColor: utilService.lightenDarkenColor(label.color, -20) }}></div>}\r\n                            {labelsOpen && <span>{label.title}</span>}\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            }\r\n\r\n            <div className=\"task-preview-title\">\r\n                <p style={{ color: textColor }} className={taskTitlePos}>{task.title}</p>\r\n            </div>\r\n            {!task.cover?.isFullCover && <div className=\"task-preview-Characters\">\r\n                <div className=\"task-preview-pins\">\r\n\r\n                    {task.dueDate &&\r\n                        <div className={task.dueDate.date < Date.now() ? 'task-preview-date-container overdue' : 'task-preview-date-container'} >\r\n\r\n                            <div className=\"task-preview-date-pin\">\r\n                                {/* <DueDate/> */}\r\n                            </div>\r\n                            <div className=\"task-preview-date-due\">\r\n                                <span>{task.dueDate.dateToDisplay}</span>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {task.description && <div className=\"task-preview-pin description-pin-preview \"><DescriptionIcon /></div>}\r\n                    {task.attachments && <div className=\"task-preview-pin \"><AttachmentIcon /> <span>{task.attachments.length}</span> </div>}\r\n                    {task.checklists && <div className=\"task-preview-pin checklists-pin\"><ChecklistIcon /> <span>{task.checklists.length}</span></div>}\r\n                    <div className=\"task-preview-pin activities-pin\"></div>\r\n                </div>\r\n\r\n                <div className=\"task-preview-members-container\">\r\n                    {taskMembers && taskMembers.map(member => {\r\n                        { return member.img ? <div className='task-preview-member-box' key={member._id} style={{ background: getMemberBackground(member) }}></div> : <div key={member._id} className='avatar-img-guest-member-box-task-preview'></div> }\r\n                    })}\r\n                </div>\r\n            </div>}\r\n        </section>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}