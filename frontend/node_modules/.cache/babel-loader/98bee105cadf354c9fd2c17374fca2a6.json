{"ast":null,"code":"function on(eventName, listener) {\n  const callListener = ({\n    detail\n  }) => {\n    listener(detail);\n  };\n\n  window.addEventListener(eventName, callListener);\n  return () => {\n    window.removeEventListener(eventName, callListener);\n  };\n}\n\nfunction emit(eventName, data) {\n  window.dispatchEvent(new CustomEvent(eventName, {\n    detail: data\n  }));\n}\n\nexport const eventBusService = {\n  on,\n  emit\n};\nexport function showUserMsg(txt, type = '') {\n  eventBusService.emit('show-user-msg', {\n    txt,\n    type\n  });\n}\nexport function showSuccessMsg(txt) {\n  showUserMsg(txt, 'success');\n}\nexport function showErrorMsg(txt) {\n  showUserMsg(txt, 'danger');\n}\nwindow.myBus = eventBusService;\nwindow.showUserMsg = showUserMsg; // eventBusService.on('baba', (x)=>console.log('Hi Baba', x))\n// eventBusService.on('baba', (x)=>console.log('Hello Baba Ji', x))\n// eventBusService.emit('baba', [5, 8, 11])\n// setTimeout(()=>{\n//     eventBusService.emit('baba', 17)\n// }, 2000)\n\n/* Listening Component...\r\n    import {eventBusService} from 'path...event-bus-service'\r\n    eventBusService.on('some-event', (dataFromEvent) => {\r\n    do something with dataFromEvent\r\n    })\r\n\r\n   Receiving Component...\r\n    eventBusService.emit('some-event', data)\r\n*/","map":{"version":3,"sources":["C:/Users/Dekel/Desktop/Trellor/Sprint4/frontend/src/services/event-bus.service.js"],"names":["on","eventName","listener","callListener","detail","window","addEventListener","removeEventListener","emit","data","dispatchEvent","CustomEvent","eventBusService","showUserMsg","txt","type","showSuccessMsg","showErrorMsg","myBus"],"mappings":"AAAA,SAASA,EAAT,CAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAE7B,QAAMC,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACjCF,IAAAA,QAAQ,CAACE,MAAD,CAAR;AACH,GAFD;;AAIAC,EAAAA,MAAM,CAACC,gBAAP,CAAwBL,SAAxB,EAAmCE,YAAnC;AAEA,SAAO,MAAM;AACTE,IAAAA,MAAM,CAACE,mBAAP,CAA2BN,SAA3B,EAAsCE,YAAtC;AACH,GAFD;AAGH;;AAED,SAASK,IAAT,CAAcP,SAAd,EAAyBQ,IAAzB,EAA+B;AAC3BJ,EAAAA,MAAM,CAACK,aAAP,CAAqB,IAAIC,WAAJ,CAAgBV,SAAhB,EAA2B;AAAEG,IAAAA,MAAM,EAAEK;AAAV,GAA3B,CAArB;AACH;;AAED,OAAO,MAAMG,eAAe,GAAG;AAAEZ,EAAAA,EAAF;AAAMQ,EAAAA;AAAN,CAAxB;AAEP,OAAO,SAASK,WAAT,CAAqBC,GAArB,EAA0BC,IAAI,GAAG,EAAjC,EAAqC;AACxCH,EAAAA,eAAe,CAACJ,IAAhB,CAAqB,eAArB,EAAsC;AAAEM,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAtC;AACH;AACD,OAAO,SAASC,cAAT,CAAwBF,GAAxB,EAA6B;AAChCD,EAAAA,WAAW,CAACC,GAAD,EAAM,SAAN,CAAX;AACH;AACD,OAAO,SAASG,YAAT,CAAsBH,GAAtB,EAA2B;AAC9BD,EAAAA,WAAW,CAACC,GAAD,EAAM,QAAN,CAAX;AACH;AAEDT,MAAM,CAACa,KAAP,GAAeN,eAAf;AACAP,MAAM,CAACQ,WAAP,GAAqBA,WAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["function on(eventName, listener) {\r\n\r\n    const callListener = ({ detail }) => {\r\n        listener(detail);\r\n    };\r\n\r\n    window.addEventListener(eventName, callListener);\r\n\r\n    return () => {\r\n        window.removeEventListener(eventName, callListener);\r\n    };\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\r\n}\r\n\r\nexport const eventBusService = { on, emit };\r\n\r\nexport function showUserMsg(txt, type = '') {\r\n    eventBusService.emit('show-user-msg', { txt, type })\r\n}\r\nexport function showSuccessMsg(txt) {\r\n    showUserMsg(txt, 'success')\r\n}\r\nexport function showErrorMsg(txt) {\r\n    showUserMsg(txt, 'danger')\r\n}\r\n\r\nwindow.myBus = eventBusService;\r\nwindow.showUserMsg = showUserMsg;\r\n\r\n// eventBusService.on('baba', (x)=>console.log('Hi Baba', x))\r\n// eventBusService.on('baba', (x)=>console.log('Hello Baba Ji', x))\r\n// eventBusService.emit('baba', [5, 8, 11])\r\n// setTimeout(()=>{\r\n//     eventBusService.emit('baba', 17)\r\n// }, 2000)\r\n\r\n/* Listening Component...\r\n    import {eventBusService} from 'path...event-bus-service'\r\n    eventBusService.on('some-event', (dataFromEvent) => {\r\n    do something with dataFromEvent\r\n    })\r\n\r\n   Receiving Component...\r\n    eventBusService.emit('some-event', data)\r\n*/"]},"metadata":{},"sourceType":"module"}