{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05DC\\u05D3\\u05D3\\\\Desktop\\\\Sprint4\\\\frontend\\\\src\\\\cmps\\\\board-list.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { boardService } from '../services/board.service';\nimport { addBoard, loadBoards, removeBoard, updateBoard } from '../store/board.actions';\nimport { AddBoard } from './add-board';\nimport { ReactComponent as SvgStar } from '../assets/img/star.svg';\nimport { ReactComponent as SvgClock } from '../assets/img/clock.svg';\nimport { LoaderSkyllo } from './loader-cmp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BoardList({\n  boards,\n  loadBoards\n}) {\n  _s();\n\n  const [bgColorCreate, setColorCreate] = useState('#39CCCC');\n  const [createIsShown, setIsShown] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadBoards());\n  }, []);\n\n  const onChangeColor = info => {\n    setColorCreate(info);\n  };\n\n  const createNewBoard = async text => {\n    try {\n      if (!text) return;\n      const board = await boardService.createBoard(text, bgColorCreate);\n      dispatch(addBoard(board));\n      setIsShown(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onSetIsStared = board => {\n    let boadrToUpdate = structuredClone(board);\n    boadrToUpdate = { ...board,\n      style: { ...board.style,\n        isStared: !board.style.isStared\n      }\n    };\n    console.log(board.style.isStared);\n    dispatch(updateBoard(boadrToUpdate));\n    console.log(board);\n  };\n\n  const onRemoveBoard = boardId => {\n    console.log(boardId);\n    dispatch(removeBoard(boardId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"workspace\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"title-workspace\",\n      children: [/*#__PURE__*/_jsxDEV(SvgStar, {\n        width: \"2%\",\n        height: \"2%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Starred boards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"board-list\",\n      children: [createIsShown && /*#__PURE__*/_jsxDEV(AddBoard, {\n        setIsShown: setIsShown,\n        createNewBoard: createNewBoard,\n        bgColorCreate: bgColorCreate,\n        onChangeColor: onChangeColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 31\n      }, this), boards.map(board => {\n        var _board$style;\n\n        const bgImg = (_board$style = board.style) === null || _board$style === void 0 ? void 0 : _board$style.bgImg;\n        let backgroundStyle = bgImg.length > 9 ? 'backgroundImage' : 'backgroundColor';\n        {\n          return board.style.isStared && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board-previwe-container\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `board/${board._id}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  [backgroundStyle]: bgImg\n                },\n                className: \"board-preview\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"darken-board-preview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"board-previw-title\",\n                  children: board.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: () => onSetIsStared(board),\n              className: \"star-board-preview\",\n              src: require('../assets/img/star.png')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)]\n          }, board._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 52\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"title-workspace\",\n      children: [/*#__PURE__*/_jsxDEV(SvgClock, {\n        width: \"2%\",\n        height: \"2%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Most popular templates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"board-list\",\n      children: [boards.map(board => {\n        var _board$style2;\n\n        const bgImg = (_board$style2 = board.style) === null || _board$style2 === void 0 ? void 0 : _board$style2.bgImg;\n        let backgroundStyle = bgImg.length > 9 ? 'backgroundImage' : 'backgroundColor';\n        {\n          return !board.style.isStared && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board-previwe-container\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `board/${board._id}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  [backgroundStyle]: bgImg\n                },\n                className: \"board-preview\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"darken-board-preview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"board-previw-title\",\n                  children: board.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(SvgStar, {\n              onClick: () => onSetIsStared(board._id),\n              className: \"star-board-preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this)]\n          }, board._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 53\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setIsShown(!createIsShown),\n        className: \"board-preview create-board\",\n        children: \"Creat new board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 12\n  }, this);\n}\n\n_s(BoardList, \"Chf9RSJwi83n5/zi1NZSD8e5bdk=\", false, function () {\n  return [useDispatch];\n});\n\n_c = BoardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardList\");","map":{"version":3,"sources":["C:/Users/אלדד/Desktop/Sprint4/frontend/src/cmps/board-list.jsx"],"names":["useEffect","useState","useDispatch","Link","boardService","addBoard","loadBoards","removeBoard","updateBoard","AddBoard","ReactComponent","SvgStar","SvgClock","LoaderSkyllo","BoardList","boards","bgColorCreate","setColorCreate","createIsShown","setIsShown","dispatch","onChangeColor","info","createNewBoard","text","board","createBoard","err","console","log","onSetIsStared","boadrToUpdate","structuredClone","style","isStared","onRemoveBoard","boardId","map","bgImg","backgroundStyle","length","_id","title","require"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { boardService } from '../services/board.service';\r\nimport { addBoard, loadBoards, removeBoard, updateBoard } from '../store/board.actions';\r\nimport { AddBoard } from './add-board';\r\nimport { ReactComponent as SvgStar } from '../assets/img/star.svg';\r\nimport { ReactComponent as SvgClock } from '../assets/img/clock.svg';\r\nimport { LoaderSkyllo } from './loader-cmp';\r\n\r\nexport function BoardList({ boards, loadBoards }) {\r\n\r\n    const [bgColorCreate, setColorCreate] = useState('#39CCCC')\r\n    const [createIsShown, setIsShown] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(loadBoards())\r\n    }, [])\r\n    const onChangeColor = (info) => {\r\n        setColorCreate(info)\r\n    }\r\n\r\n    const createNewBoard = async (text) => {\r\n        try {\r\n            if (!text) return\r\n\r\n            const board = await boardService.createBoard(text, bgColorCreate)\r\n            dispatch(addBoard(board))\r\n            setIsShown(false)\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    const onSetIsStared =  (board) => {\r\n       \r\n            let boadrToUpdate=  structuredClone(board)\r\n             boadrToUpdate = { ...board, style: { ...board.style, isStared: !board.style.isStared } }\r\n            console.log(board.style.isStared);\r\n            dispatch(updateBoard(boadrToUpdate))\r\n            console.log(board);\r\n\r\n   \r\n\r\n    }\r\n\r\n    const onRemoveBoard = (boardId) => {\r\n        console.log(boardId);\r\n        dispatch(removeBoard(boardId))\r\n    }\r\n    return <div className='workspace'>\r\n\r\n        <span className='title-workspace'>\r\n            <SvgStar width=\"2%\"\r\n                height=\"2%\" />  <span>\r\n                Starred boards\r\n            </span>\r\n        </span>\r\n        <section className=\"board-list\">\r\n\r\n            {createIsShown && <AddBoard setIsShown={setIsShown} createNewBoard={createNewBoard} bgColorCreate={bgColorCreate} onChangeColor={onChangeColor} />}\r\n\r\n\r\n            {boards.map(board => {\r\n                const bgImg = board.style?.bgImg\r\n                let backgroundStyle = bgImg.length > 9 ? 'backgroundImage' : 'backgroundColor'\r\n                {\r\n                    return board.style.isStared && <div key={board._id} className='board-previwe-container'>\r\n                        <Link to={`board/${board._id}`} >\r\n                            <div style={{ [backgroundStyle]: bgImg }} className='board-preview'>\r\n                                <div className='darken-board-preview'>\r\n                                </div>\r\n                                <span className=\"board-previw-title\">{board.title}</span>\r\n                            </div>\r\n                        </Link>\r\n                        {/* <span onClick={() => onRemoveBoard(board._id)} className='remove-board'> x </span> */}\r\n                        <img onClick={() => onSetIsStared(board)} className='star-board-preview' src={require('../assets/img/star.png')} />\r\n\r\n                    </div>\r\n                }\r\n\r\n            })}\r\n        </section >\r\n        <span className='title-workspace'>\r\n            <SvgClock width=\"2%\"\r\n                height=\"2%\" />\r\n            <span>\r\n                Most popular templates\r\n            </span>\r\n        </span>\r\n\r\n        <section className=\"board-list\">\r\n            {boards.map(board => {\r\n                const bgImg = board.style?.bgImg\r\n                let backgroundStyle = bgImg.length > 9 ? 'backgroundImage' : 'backgroundColor'\r\n                {\r\n                    return !board.style.isStared && <div key={board._id} className='board-previwe-container'>\r\n                        <Link to={`board/${board._id}`} >\r\n                            <div style={{ [backgroundStyle]: bgImg }} className='board-preview'>\r\n                                <div className='darken-board-preview'>\r\n                                </div>\r\n                                <span className=\"board-previw-title\">{board.title}</span>\r\n                            </div>\r\n                        </Link>\r\n                        {/* <span onClick={() => onRemoveBoard(board._id)} className='remove-board'> x </span> */}\r\n                        <SvgStar onClick={() => onSetIsStared(board._id)} className='star-board-preview' />\r\n                    </div>\r\n                }\r\n            })}\r\n            <div onClick={() => setIsShown(!createIsShown)} className='board-preview create-board'>\r\n                Creat new board\r\n            </div>\r\n\r\n        </section>\r\n    </div >\r\n\r\n\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}