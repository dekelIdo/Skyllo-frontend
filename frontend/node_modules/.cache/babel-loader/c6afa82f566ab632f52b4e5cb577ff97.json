{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05DC\\u05D3\\u05D3\\\\Desktop\\\\Sprint4\\\\frontend\\\\src\\\\cmps\\\\img-uploader.jsx\";\nimport { Component } from 'react';\nimport { uploadService } from '../services/upload.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ImgUploader extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imgUrl: null,\n      height: 500,\n      width: 500,\n      isUploading: false\n    };\n\n    this.uploadImg = async ev => {\n      this.setState({\n        isUploading: true\n      });\n      const {\n        secure_url,\n        height,\n        width\n      } = await uploadService.uploadImg(ev);\n      this.setState({\n        isUploading: false,\n        imgUrl: secure_url,\n        height,\n        width\n      });\n      this.props.onUploaded && this.props.onUploaded(secure_url);\n    };\n  }\n\n  get uploadMsg() {\n    const {\n      imgUrl,\n      isUploading\n    } = this.state;\n    if (imgUrl) return 'Upload Another?';\n    return isUploading ? 'Uploading....' : 'Upload Image';\n  }\n\n  render() {\n    const {\n      imgUrl\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-preview\",\n      children: [imgUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgUrl,\n        style: {\n          maxWidth: '200px',\n          float: 'right'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"imgUpload\",\n        children: this.uploadMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: this.uploadImg,\n        accept: \"img/*\",\n        id: \"imgUpload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/אלדד/Desktop/Sprint4/frontend/src/cmps/img-uploader.jsx"],"names":["Component","uploadService","ImgUploader","state","imgUrl","height","width","isUploading","uploadImg","ev","setState","secure_url","props","onUploaded","uploadMsg","render","maxWidth","float"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,aAAT,QAA8B,4BAA9B;;AAEA,OAAO,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACzCG,KADyC,GACjC;AACNC,MAAAA,MAAM,EAAE,IADF;AAENC,MAAAA,MAAM,EAAE,GAFF;AAGNC,MAAAA,KAAK,EAAE,GAHD;AAINC,MAAAA,WAAW,EAAE;AAJP,KADiC;;AAAA,SAOzCC,SAPyC,GAO7B,MAAOC,EAAP,IAAc;AACxB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,WAAW,EAAE;AAAf,OAAd;AACA,YAAM;AAAEI,QAAAA,UAAF;AAAcN,QAAAA,MAAd;AAAsBC,QAAAA;AAAtB,UAAgC,MAAML,aAAa,CAACO,SAAd,CAAwBC,EAAxB,CAA5C;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,WAAW,EAAE,KAAf;AAAsBH,QAAAA,MAAM,EAAEO,UAA9B;AAA0CN,QAAAA,MAA1C;AAAkDC,QAAAA;AAAlD,OAAd;AACA,WAAKM,KAAL,CAAWC,UAAX,IAAyB,KAAKD,KAAL,CAAWC,UAAX,CAAsBF,UAAtB,CAAzB;AACD,KAZwC;AAAA;;AAa5B,MAATG,SAAS,GAAG;AACd,UAAM;AAAEV,MAAAA,MAAF;AAAUG,MAAAA;AAAV,QAA0B,KAAKJ,KAArC;AACA,QAAIC,MAAJ,EAAY,OAAO,iBAAP;AACZ,WAAOG,WAAW,GAAG,eAAH,GAAqB,cAAvC;AACD;;AACDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,iBACGC,MAAM,iBAAI;AAAK,QAAA,GAAG,EAAEA,MAAV;AAAkB,QAAA,KAAK,EAAE;AAACY,UAAAA,QAAQ,EAAE,OAAX;AAAoBC,UAAAA,KAAK,EAAE;AAA3B;AAAzB;AAAA;AAAA;AAAA;AAAA,cADb,eAEE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA,kBAA6B,KAAKH;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAG,KAAKN,SAAnC;AAA+C,QAAA,MAAM,EAAC,OAAtD;AAA8D,QAAA,EAAE,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA5BwC","sourcesContent":["import { Component } from 'react'\r\nimport { uploadService } from '../services/upload.service'\r\n\r\nexport class ImgUploader extends Component {\r\n  state = {\r\n    imgUrl: null,\r\n    height: 500,\r\n    width: 500,\r\n    isUploading: false\r\n  }\r\n  uploadImg = async (ev) => {\r\n    this.setState({ isUploading: true })\r\n    const { secure_url, height, width } = await uploadService.uploadImg(ev)\r\n    this.setState({ isUploading: false, imgUrl: secure_url, height, width })\r\n    this.props.onUploaded && this.props.onUploaded(secure_url)\r\n  }\r\n  get uploadMsg() {\r\n    const { imgUrl, isUploading } = this.state\r\n    if (imgUrl) return 'Upload Another?'\r\n    return isUploading ? 'Uploading....' : 'Upload Image'\r\n  }\r\n  render() {\r\n    const { imgUrl} = this.state\r\n\r\n    return (\r\n      <div className=\"upload-preview\"  >\r\n        {imgUrl && <img src={imgUrl} style={{maxWidth: '200px', float: 'right'}} />}\r\n        <label htmlFor=\"imgUpload\">{ this.uploadMsg }</label>\r\n        <input type=\"file\" onChange={ this.uploadImg } accept=\"img/*\" id=\"imgUpload\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}