{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dekel\\\\Desktop\\\\Trellor\\\\Sprint4\\\\frontend\\\\src\\\\cmps\\\\task-details\\\\task-checklist.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ReactComponent as ChecklistIcon } from '../../assets/img/checklist-icon.svg';\nimport { ReactComponent as MoreOptions } from '../../assets/img/more-options-icon.svg';\nimport { utilService } from '../../services/util.service';\nimport { saveTask, updateBoard } from '../../store/board.actions';\nimport { ReactComponent as CloseTask } from '../../assets/img/close-task-form.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TaskChecklist({\n  task,\n  group,\n  initChecklist,\n  setTask,\n  board,\n  onRemoveChecklist\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isFocus, setIsFocus] = useState(initChecklist !== null && initChecklist !== void 0 && initChecklist.isFocus ? initChecklist.isFocus : true);\n  const [checklist, setChecklist] = useState({ ...initChecklist\n  });\n  const [todoTxt, setTodoTxt] = useState('');\n  const [progress, setProgress] = useState(0);\n  const [complete, setComplete] = useState();\n  const [editMode, setEditMode] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState('');\n  useEffect(() => {\n    setChecklist({ ...initChecklist\n    });\n    setProgress(getProgress());\n  }, [task]);\n  useEffect(() => {\n    dispatch(updateBoard(board));\n  }, [checklist]);\n\n  const onToggleInput = () => {\n    setTodoTxt('');\n    setIsFocus(!isFocus);\n  };\n\n  const onEditTodo = todoId => {\n    setEditMode(todoId);\n  };\n\n  const onAddTodo = () => {\n    if (!todoTxt) return;\n    const todo = {\n      id: utilService.makeId(),\n      txt: todoTxt,\n      isDone: false\n    };\n    const newChecklist = { ...checklist,\n      todos: [...checklist.todos, todo]\n    };\n    const newChecklists = task.checklists.filter(currChecklist => currChecklist.id !== checklist.id);\n    newChecklists.push(newChecklist);\n    const newTask = { ...task,\n      checklists: newChecklists\n    };\n    console.log(newTask);\n    setTask(newTask);\n    setTodoTxt('');\n    setProgress(getProgress());\n  };\n\n  const onRemoveTodo = (ev, todoId) => {\n    ev.preventDefault();\n    const todoIdx = checklist.todos.findIndex(currTodo => currTodo.id === todoId);\n    checklist.todos.splice(todoIdx, 1);\n    const newChecklist = { ...checklist\n    };\n    updateChecklist(newChecklist);\n    setIsModalOpen(null);\n  };\n\n  const onToggleDone = todoId => {\n    const todo = checklist.todos.find(currTodo => currTodo.id === todoId);\n    const newTodo = { ...todo,\n      isDone: !todo.isDone\n    };\n    updateTodo(newTodo);\n  };\n\n  const updateTodo = todoToUpdate => {\n    const todoIdx = checklist.todos.findIndex(currTodo => currTodo.id === todoToUpdate.id);\n    const newChecklist = { ...checklist\n    };\n    newChecklist.todos.splice(todoIdx, 1, todoToUpdate);\n    updateChecklist(newChecklist);\n  };\n\n  const updateChecklist = newChecklist => {\n    setChecklist(newChecklist);\n    const progress = getProgress();\n    setProgress(progress);\n    setComplete(progress === 100 ? 'green' : '');\n  };\n\n  const handleChangeTxt = ({\n    target\n  }) => {\n    console.log(target.value);\n    const txt = target.value;\n    setTodoTxt(txt);\n  };\n\n  const getProgress = () => {\n    console.log('hello progress');\n    if (!checklist.todos || checklist.todos.length === 0) return 0;\n    const doneCount = checklist.todos.reduce((acc, todo) => {\n      if (todo.isDone) acc++;\n      return acc;\n    }, 0);\n    const ratio = doneCount / checklist.todos.length * 100;\n    return ratio;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checklist-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-checklist-title\",\n      children: [/*#__PURE__*/_jsxDEV(ChecklistIcon, {\n        className: \"title-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: checklist.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-btn \",\n        onClick: ev => onRemoveChecklist(ev, checklist.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n      id: \"file\",\n      value: progress,\n      max: \"100\",\n      className: complete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), checklist.todos && /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"todos-container \",\n      children: checklist.todos.map(todo => {\n        const classIsDone = todo !== null && todo !== void 0 && todo.isDone ? 'done ' : 'active ';\n        const classIsChecked = todo !== null && todo !== void 0 && todo.isDone ? 'checkbox checked ' : 'checkbox ';\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checklist-todo \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classIsChecked,\n            onClick: () => onToggleDone(todo.id),\n            children: todo.isDone && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"checkbox-checked-content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classIsDone,\n            onClick: () => onEditTodo(todo.id),\n            children: todo.txt\n          }, todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove-todo-btn\",\n            onClick: () => setIsModalOpen(todo.id),\n            children: /*#__PURE__*/_jsxDEV(MoreOptions, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 33\n          }, this), isModalOpen === todo.id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options-modal-open\",\n            children: [/*#__PURE__*/_jsxDEV(\"section\", {\n              className: \"modal-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(CloseTask, {\n                className: \"close-modal-icon\",\n                onClick: () => setIsModalOpen(null)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-group-btn\",\n              onClick: ev => onRemoveTodo(ev, todo.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this), isFocus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: checklist !== null && checklist !== void 0 && checklist.isFocus ? 'editable-checklist' : 'non-editable-checklist',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checklist-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add an item\",\n          onChange: handleChangeTxt,\n          value: todoTxt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checklist-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-btn\",\n            onClick: onAddTodo,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: onToggleInput,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this), !isFocus && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-open-input\",\n      onClick: onToggleInput,\n      children: \"Add an item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskChecklist, \"90QzPfuuQFPAXoJJLTLpfj2QCCw=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TaskChecklist;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskChecklist\");","map":{"version":3,"sources":["C:/Users/Dekel/Desktop/Trellor/Sprint4/frontend/src/cmps/task-details/task-checklist.jsx"],"names":["useEffect","useState","useDispatch","ReactComponent","ChecklistIcon","MoreOptions","utilService","saveTask","updateBoard","CloseTask","TaskChecklist","task","group","initChecklist","setTask","board","onRemoveChecklist","dispatch","isFocus","setIsFocus","checklist","setChecklist","todoTxt","setTodoTxt","progress","setProgress","complete","setComplete","editMode","setEditMode","isModalOpen","setIsModalOpen","getProgress","onToggleInput","onEditTodo","todoId","onAddTodo","todo","id","makeId","txt","isDone","newChecklist","todos","newChecklists","checklists","filter","currChecklist","push","newTask","console","log","onRemoveTodo","ev","preventDefault","todoIdx","findIndex","currTodo","splice","updateChecklist","onToggleDone","find","newTodo","updateTodo","todoToUpdate","handleChangeTxt","target","value","length","doneCount","reduce","acc","ratio","title","map","classIsDone","classIsChecked"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { ReactComponent as ChecklistIcon } from '../../assets/img/checklist-icon.svg'\r\nimport { ReactComponent as MoreOptions } from '../../assets/img/more-options-icon.svg'\r\nimport { utilService } from '../../services/util.service'\r\nimport { saveTask, updateBoard } from '../../store/board.actions'\r\nimport { ReactComponent as CloseTask } from '../../assets/img/close-task-form.svg'\r\n\r\nexport function TaskChecklist({ task, group, initChecklist, setTask, board, onRemoveChecklist }) {\r\n\r\n    const dispatch = useDispatch()\r\n    const [isFocus, setIsFocus] = useState(initChecklist?.isFocus ? initChecklist.isFocus : true)\r\n    const [checklist, setChecklist] = useState({ ...initChecklist })\r\n    const [todoTxt, setTodoTxt] = useState('')\r\n    const [progress, setProgress] = useState(0)\r\n    const [complete, setComplete] = useState()\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [isModalOpen, setIsModalOpen] = useState('')\r\n\r\n    useEffect(() => {\r\n        setChecklist({ ...initChecklist })\r\n        setProgress(getProgress())\r\n    }, [task])\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(updateBoard(board))\r\n    }, [checklist])\r\n\r\n\r\n    const onToggleInput = () => {\r\n        setTodoTxt('')\r\n        setIsFocus(!isFocus)\r\n    }\r\n    const onEditTodo = (todoId) => {\r\n        setEditMode(todoId)\r\n    }\r\n\r\n    const onAddTodo = () => {\r\n        if (!todoTxt) return\r\n        const todo = {\r\n            id: utilService.makeId(),\r\n            txt: todoTxt,\r\n            isDone: false\r\n        }\r\n        const newChecklist = ({ ...checklist, todos: [...checklist.todos, todo] })\r\n        const newChecklists = task.checklists.filter(currChecklist => currChecklist.id !== checklist.id)\r\n        newChecklists.push(newChecklist)\r\n        const newTask = { ...task, checklists: newChecklists }\r\n        console.log(newTask)\r\n        setTask(newTask)\r\n        setTodoTxt('')\r\n        setProgress(getProgress())\r\n    }\r\n\r\n    const onRemoveTodo = (ev, todoId) => {\r\n        ev.preventDefault()\r\n        const todoIdx = checklist.todos.findIndex(currTodo => currTodo.id === todoId)\r\n        checklist.todos.splice(todoIdx, 1)\r\n        const newChecklist = {...checklist}\r\n        updateChecklist(newChecklist)\r\n        setIsModalOpen(null)\r\n    }\r\n\r\n    const onToggleDone = (todoId) => {\r\n        const todo = checklist.todos.find(currTodo => currTodo.id === todoId)\r\n        const newTodo = { ...todo, isDone: !todo.isDone }\r\n        updateTodo(newTodo)\r\n    }\r\n\r\n    const updateTodo = (todoToUpdate) => {\r\n        const todoIdx = checklist.todos.findIndex(currTodo => currTodo.id === todoToUpdate.id)\r\n        const newChecklist = { ...checklist }\r\n        newChecklist.todos.splice(todoIdx, 1, todoToUpdate)\r\n        updateChecklist(newChecklist)\r\n    }\r\n\r\n    const updateChecklist = (newChecklist) => {\r\n        setChecklist(newChecklist)\r\n        const progress = getProgress()\r\n        setProgress(progress)\r\n        setComplete(progress === 100 ? 'green' : '')\r\n    }\r\n\r\n    const handleChangeTxt = ({ target }) => {\r\n        console.log(target.value)\r\n        const txt = target.value\r\n        setTodoTxt(txt)\r\n    }\r\n\r\n\r\n    const getProgress = () => {\r\n        console.log('hello progress')\r\n        if (!checklist.todos || checklist.todos.length === 0) return 0\r\n        const doneCount = checklist.todos.reduce((acc, todo) => {\r\n            if (todo.isDone) acc++\r\n            return acc\r\n        }, 0)\r\n        const ratio = (doneCount / checklist.todos.length) * 100\r\n        return ratio\r\n    }\r\n\r\n    return (\r\n\r\n        <div className='checklist-container'>\r\n            <div className='container-checklist-title'>\r\n                <ChecklistIcon className='title-icon' />\r\n                <h5>{checklist.title}</h5>\r\n                <button className='delete-btn ' onClick={(ev) => onRemoveChecklist(ev, checklist.id)}>Delete</button>\r\n            </div>\r\n\r\n\r\n            <progress id=\"file\" value={progress} max=\"100\" className={complete}></progress>\r\n            {checklist.todos &&\r\n                <section className='todos-container '>\r\n                    {checklist.todos.map(todo => {\r\n                        const classIsDone = todo?.isDone ? 'done ' : 'active '\r\n                        const classIsChecked = todo?.isDone ? 'checkbox checked ' : 'checkbox '\r\n                        return (\r\n                            <div className='checklist-todo '>\r\n                                <div className={classIsChecked} onClick={() => onToggleDone(todo.id)} >\r\n                                    {todo.isDone && <span className='checkbox-checked-content'></span>}\r\n                                </div>\r\n                                <div className={classIsDone} onClick={() => onEditTodo(todo.id)} key={todo.id}>{todo.txt}</div>\r\n                                <button className='remove-todo-btn' onClick={() => setIsModalOpen(todo.id)}>\r\n                                <MoreOptions />\r\n                                </button>\r\n                                \r\n                                {isModalOpen === todo.id && (\r\n                                    <div className='options-modal-open'>\r\n                                           <section className='modal-actions'>\r\n                                             <p>Actions</p>\r\n                                             <CloseTask\r\n                                              className='close-modal-icon'\r\n                                              onClick={() => setIsModalOpen(null)}\r\n                                            />\r\n                                          </section>\r\n                                          <button\r\n                                            className='delete-group-btn'\r\n                                            onClick={ev => onRemoveTodo(ev, todo.id)}\r\n                                          >\r\n                                            Delete\r\n                                          </button>\r\n                                        </div>\r\n                                )\r\n                                }\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </section>}\r\n            {isFocus &&\r\n                <div className={checklist?.isFocus ? 'editable-checklist' : 'non-editable-checklist'}>\r\n                    <div className='checklist-input'>\r\n                        <input type=\"text\" placeholder=\"Add an item\" onChange={handleChangeTxt} value={todoTxt} />\r\n                        <div className='checklist-btn'>\r\n                            <button className=\"add-btn\" onClick={onAddTodo}>Add</button>\r\n                            <button className=\"cancel-btn\" onClick={onToggleInput}>Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {!isFocus &&\r\n                <button className='add-open-input' onClick={onToggleInput}>Add an item</button>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}