{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dekel\\\\Desktop\\\\Trellor\\\\Sprint4\\\\frontend\\\\src\\\\cmps\\\\group-preview.jsx\",\n    _s = $RefreshSig$();\n\nimport { TaskList } from './task-list';\nimport { useEffect, useState } from 'react';\nimport { ReactComponent as CloseTask } from '../assets/img/close-task-form.svg';\nimport { ReactComponent as MoreOptions } from '../assets/img/more-options-icon.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveTask, updateBoard } from '../store/board.actions';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GroupPreview({\n  board,\n  group,\n  boardId,\n  onRemoveGroup\n}) {\n  _s();\n\n  const [isAddingTask, setIsAddingTask] = useState(false);\n  const [isShowOptions, setIsShowOptions] = useState(false);\n  const [title, setTitle] = useState('');\n  const user = useSelector(state => state.userModule.user);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setTitle(group.title);\n  }, [group.title]);\n\n  const onAddTask = ev => {\n    ev.preventDefault();\n    const title = ev.target[0].value;\n    if (!title) return;\n    const task = {\n      title\n    };\n    dispatch(saveTask(boardId, group.id, task, {\n      text: 'added task',\n      taskTilte: task.title,\n      groupId: group.id,\n      user: user\n    }));\n    ev.target[0].value = '';\n    setIsAddingTask(false);\n  };\n\n  const handleChangeTitle = ev => {\n    const title = ev.target.value;\n    setTitle(title);\n  };\n\n  const onSaveTitle = ev => {\n    ev.preventDefault();\n    const groupIdx = board.groups.findIndex(currGroup => currGroup.id === group.id);\n    if (!title) return;\n    board.groups[groupIdx].title = title;\n    dispatch(updateBoard(board));\n  };\n\n  const addingTaskShown = () => {\n    setIsAddingTask(!isAddingTask);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"group-preview \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-preview-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSaveTitle,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChangeTitle,\n          type: \"text\",\n          value: title,\n          id: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setIsShowOptions(!isShowOptions),\n        className: \"group-more-options\",\n        children: /*#__PURE__*/_jsxDEV(MoreOptions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), isShowOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-modal-open\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CloseTask, {\n            className: \"close-modal-icon\",\n            onClick: () => setIsShowOptions(!isShowOptions)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-group-btn\",\n          onClick: ev => onRemoveGroup(ev, group.id, group.title),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-container\",\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: group.id,\n        children: provided => {\n          return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.draggableProps,\n            ref: provided.innerRef,\n            children: /*#__PURE__*/_jsxDEV(TaskList, {\n              group: group,\n              children: provided.placeholder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), !isAddingTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setIsAddingTask(true),\n      className: \"add-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        stroke: \"currentColor\",\n        fill: \"currentColor\",\n        strokeWidth: \"0\",\n        viewBox: \"0 0 24 24\",\n        className: \"icon\",\n        height: \"1em\",\n        width: \"1em\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          fill: \"none\",\n          stroke: \"#000\",\n          strokeWidth: \"2\",\n          d: \"M12,22 L12,2 M2,12 L22,12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add a card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), isAddingTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adding-task-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onAddTask,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Enter task title..\",\n          name: \"adding-task\",\n          id: \"textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"adding-task-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-task-btn\",\n            children: \"Add Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close-adding-task\",\n            children: /*#__PURE__*/_jsxDEV(CloseTask, {\n              onClick: addingTaskShown\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GroupPreview, \"6zq24MNIWFl9NcgWOtWpcaydZAA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = GroupPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupPreview\");","map":{"version":3,"sources":["C:/Users/Dekel/Desktop/Trellor/Sprint4/frontend/src/cmps/group-preview.jsx"],"names":["TaskList","useEffect","useState","ReactComponent","CloseTask","MoreOptions","useDispatch","useSelector","saveTask","updateBoard","Droppable","GroupPreview","board","group","boardId","onRemoveGroup","isAddingTask","setIsAddingTask","isShowOptions","setIsShowOptions","title","setTitle","user","state","userModule","dispatch","onAddTask","ev","preventDefault","target","value","task","id","text","taskTilte","groupId","handleChangeTitle","onSaveTitle","groupIdx","groups","findIndex","currGroup","addingTaskShown","provided","draggableProps","innerRef","placeholder"],"mappings":"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","sourcesContent":["import { TaskList } from './task-list'\r\nimport { useEffect, useState } from 'react'\r\nimport { ReactComponent as CloseTask } from '../assets/img/close-task-form.svg'\r\nimport { ReactComponent as MoreOptions } from '../assets/img/more-options-icon.svg'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveTask, updateBoard } from '../store/board.actions'\r\nimport { Droppable } from 'react-beautiful-dnd'\r\n\r\nexport function GroupPreview({ board, group, boardId, onRemoveGroup }) {\r\n  const [isAddingTask, setIsAddingTask] = useState(false)\r\n  const [isShowOptions, setIsShowOptions] = useState(false)\r\n  const [title, setTitle] = useState('')\r\n  const user = useSelector(state => state.userModule.user)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    setTitle(group.title)\r\n\r\n  }, [group.title])\r\n\r\n  const onAddTask = ev => {\r\n    ev.preventDefault()\r\n    const title = ev.target[0].value\r\n    if (!title) return\r\n    const task = {\r\n      title\r\n    }\r\n\r\n    dispatch(saveTask(boardId, group.id, task, { text: 'added task', taskTilte: task.title, groupId:group.id, user: user }))\r\n    ev.target[0].value = ''\r\n    setIsAddingTask(false)\r\n  }\r\n\r\n  const handleChangeTitle = (ev) => {\r\n    const title = ev.target.value\r\n    setTitle(title)\r\n  }\r\n\r\n  const onSaveTitle = (ev) => {\r\n    ev.preventDefault()\r\n    const groupIdx = board.groups.findIndex(currGroup => currGroup.id === group.id)\r\n    if (!title) return\r\n    board.groups[groupIdx].title = title\r\n    dispatch(updateBoard(board))\r\n  }\r\n\r\n  const addingTaskShown = () => {\r\n    setIsAddingTask(!isAddingTask)\r\n  }\r\n\r\n  return (\r\n    <section className='group-preview '>\r\n      <div className='group-preview-header'>\r\n        <form onSubmit={onSaveTitle}>\r\n          <input onChange={handleChangeTitle} type='text' value={title} id='' />\r\n        </form>\r\n\r\n        <div\r\n          onClick={() => setIsShowOptions(!isShowOptions)}\r\n          className='group-more-options'\r\n        >\r\n          <MoreOptions />\r\n        </div>\r\n\r\n        {isShowOptions && (\r\n          <div className='options-modal-open'>\r\n            <section className='modal-actions'>\r\n              <p>Actions</p>\r\n              <CloseTask\r\n                className='close-modal-icon'\r\n                onClick={() => setIsShowOptions(!isShowOptions)}\r\n              />\r\n            </section>\r\n\r\n            <button\r\n              className='delete-group-btn'\r\n              onClick={ev => onRemoveGroup(ev, group.id, group.title)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className='list-container'>\r\n        <Droppable droppableId={group.id}>\r\n          {(provided) => {\r\n            return (<div\r\n              {...provided.draggableProps}\r\n              ref={provided.innerRef} >\r\n\r\n              <TaskList group={group}>\r\n                {provided.placeholder}\r\n              </TaskList>\r\n            </div>)\r\n          }}\r\n\r\n        </Droppable>\r\n      </div>\r\n\r\n\r\n      {!isAddingTask && (\r\n        <div onClick={() => setIsAddingTask(true)} className='add-task'>\r\n          <svg \r\n          \r\n            stroke='currentColor'\r\n            fill='currentColor'\r\n            strokeWidth='0'\r\n            viewBox='0 0 24 24'\r\n            className='icon'\r\n            height='1em'\r\n            width='1em'\r\n            xmlns='http://www.w3.org/2000/svg'\r\n          >\r\n            <path\r\n              fill='none'\r\n              stroke='#000'\r\n              strokeWidth='2'\r\n              d='M12,22 L12,2 M2,12 L22,12'\r\n            ></path>\r\n          </svg>\r\n          <p>Add a card</p>\r\n        </div>\r\n      )}\r\n\r\n      {isAddingTask && (\r\n        <div className='adding-task-container'>\r\n          <form onSubmit={onAddTask}>\r\n            <textarea\r\n              placeholder='Enter task title..'\r\n              name='adding-task'\r\n              id='textarea'\r\n            />\r\n            <div className='adding-task-actions'>\r\n              <button className='add-task-btn'>Add Card</button>\r\n              <span className='close-adding-task'>\r\n                <CloseTask onClick={addingTaskShown} />\r\n              </span>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}