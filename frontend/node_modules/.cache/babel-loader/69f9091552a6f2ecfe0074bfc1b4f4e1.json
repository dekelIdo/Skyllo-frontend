{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05DC\\u05D3\\u05D3\\\\Desktop\\\\Sprint4\\\\frontend\\\\src\\\\pages\\\\board-app.jsx\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect } from 'react'\n// import { connect } from 'react-redux'\n// import { loadBoards, addBoard, updateBoard, removeBoard } from '../store/board.actions.js'\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { Outlet, useParams } from \"react-router-dom\";\nimport { BoardHeader } from \"../cmps/board-header\";\nimport { GroupList } from \"../cmps/group-list\";\nimport { boardService } from \"../services/board.service\";\nimport { getCurrBoard, addGroup, updateBoard } from \"../store/board.actions\";\nimport { onSignup } from \"../store/user.actions\";\nimport { userService } from \"../services/user.service\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { Popover } from \"../cmps/popover-cmp\";\nimport { LoaderSkyllo } from \"../cmps/loader-cmp\"; // import { boardService } from '../services/board.service.js'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BoardApp() {\n  _s();\n\n  var _board$style, _board$style2;\n\n  const params = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCurrBoard(params.boardId));\n  }, []);\n  const board = useSelector(state => state.boardModule.board);\n  const user = useSelector(state => state.userModule.user);\n\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId,\n      type\n    } = result;\n    const newBoard = structuredClone(board);\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId // destination.index === source.index\n    ) {\n      return;\n    }\n\n    console.log('group', result); // DRABBALE GROUP\n\n    if (source.droppableId === destination.droppableId && type === \"group\") {\n      console.log(source, 'sourcesourcesourcesourcesource');\n      const currGroup = newBoard.groups.find(group => group.id === draggableId);\n      newBoard.groups.splice(source.index, 1);\n      newBoard.groups.splice(destination.index, 0, currGroup); // GRABBALE TASK IN SAME GROUP\n    } else if (source.droppableId === destination.droppableId) {\n      var _group$tasks, _group$tasks2, _group$tasks3;\n\n      const group = newBoard.groups.find(group => group.id === source.droppableId);\n      const currTask = group === null || group === void 0 ? void 0 : (_group$tasks = group.tasks) === null || _group$tasks === void 0 ? void 0 : _group$tasks.find(task => task.id === draggableId);\n      group === null || group === void 0 ? void 0 : (_group$tasks2 = group.tasks) === null || _group$tasks2 === void 0 ? void 0 : _group$tasks2.splice(source.index, 1);\n      group === null || group === void 0 ? void 0 : (_group$tasks3 = group.tasks) === null || _group$tasks3 === void 0 ? void 0 : _group$tasks3.splice(destination.index, 0, currTask); // GRABBALE TASK \n    } else if (source.droppableId !== destination.droppableId) {\n      const fromGroup = newBoard.groups.find(group => group.id === source.droppableId);\n      const toGroup = newBoard.groups.find(group => group.id === destination.droppableId);\n      const currTask = fromGroup.tasks.find(task => task.id === draggableId);\n      fromGroup.tasks.splice(source.index, 1);\n      toGroup.tasks.splice(destination.index, 0, currTask);\n    }\n\n    dispatch(updateBoard(newBoard));\n  };\n\n  if (!board) return /*#__PURE__*/_jsxDEV(LoaderSkyllo, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 24\n  }, this);\n  let backgroundStyle = (board === null || board === void 0 ? void 0 : (_board$style = board.style) === null || _board$style === void 0 ? void 0 : _board$style.bgImg.length) > 9 ? 'backgroundImage' : 'backgroundColor';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      [backgroundStyle]: board === null || board === void 0 ? void 0 : (_board$style2 = board.style) === null || _board$style2 === void 0 ? void 0 : _board$style2.bgImg,\n      objectFit: 'cover',\n      backgroundSize: 'cover'\n    },\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-app\",\n      children: [/*#__PURE__*/_jsxDEV(BoardHeader, {\n        board: board\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        board: board\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          style: {\n            overflowY: 'unset'\n          },\n          droppableId: \"all-groups\",\n          direction: \"horizontal\",\n          type: \"group\",\n          children: provided => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-move-group\",\n              ...provided.draggableProps,\n              ref: provided.innerRef,\n              children: [/*#__PURE__*/_jsxDEV(GroupList, {\n                board: board\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 29\n              }, this), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 32\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 12\n  }, this);\n}\n\n_s(BoardApp, \"EV4n3T3h5pTj/PJFHM4v/J6Xc2o=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector];\n});\n\n_c = BoardApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardApp\");","map":{"version":3,"sources":["C:/Users/אלדד/Desktop/Sprint4/frontend/src/pages/board-app.jsx"],"names":["useEffect","useState","useDispatch","useSelector","Outlet","useParams","BoardHeader","GroupList","boardService","getCurrBoard","addGroup","updateBoard","onSignup","userService","DragDropContext","Droppable","Popover","LoaderSkyllo","BoardApp","params","dispatch","boardId","board","state","boardModule","user","userModule","onDragEnd","result","destination","source","draggableId","type","newBoard","structuredClone","droppableId","console","log","currGroup","groups","find","group","id","splice","index","currTask","tasks","task","fromGroup","toGroup","backgroundStyle","style","bgImg","length","objectFit","backgroundSize","overflowY","provided","draggableProps","innerRef","placeholder"],"mappings":"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","sourcesContent":["// import React, { useEffect } from 'react'\r\n// import { connect } from 'react-redux'\r\n// import { loadBoards, addBoard, updateBoard, removeBoard } from '../store/board.actions.js'\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Outlet, useParams } from \"react-router-dom\";\r\nimport { BoardHeader } from \"../cmps/board-header\";\r\nimport { GroupList } from \"../cmps/group-list\";\r\nimport { boardService } from \"../services/board.service\";\r\nimport { getCurrBoard, addGroup, updateBoard } from \"../store/board.actions\";\r\nimport { onSignup } from \"../store/user.actions\";\r\nimport { userService } from \"../services/user.service\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { Popover } from \"../cmps/popover-cmp\";\r\nimport { LoaderSkyllo } from \"../cmps/loader-cmp\";\r\n\r\n// import { boardService } from '../services/board.service.js'\r\n\r\nexport function BoardApp() {\r\n\r\n    const params = useParams()\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getCurrBoard(params.boardId))\r\n    }, [])\r\n\r\n    const board = useSelector(state => state.boardModule.board)\r\n    const user = useSelector(state => state.userModule.user)\r\n\r\n\r\n    const onDragEnd = result => {\r\n        const { destination, source, draggableId, type } = result;\r\n        const newBoard = structuredClone(board)\r\n\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        if (\r\n            destination.droppableId === source.droppableId\r\n            // destination.index === source.index\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        console.log('group', result)\r\n        // DRABBALE GROUP\r\n        if (source.droppableId === destination.droppableId && type === \"group\") {\r\n            console.log(source, 'sourcesourcesourcesourcesource');\r\n            const currGroup = newBoard.groups.find(group => group.id === draggableId)\r\n            newBoard.groups.splice(source.index, 1)\r\n            newBoard.groups.splice(destination.index, 0, currGroup)\r\n\r\n            // GRABBALE TASK IN SAME GROUP\r\n        } else if (source.droppableId === destination.droppableId) {\r\n            const group = newBoard.groups.find(group => group.id === source.droppableId)\r\n            const currTask = group?.tasks?.find(task => task.id === draggableId)\r\n            group?.tasks?.splice(source.index, 1);\r\n            group?.tasks?.splice(destination.index, 0, currTask)\r\n            // GRABBALE TASK \r\n        } else if (source.droppableId !== destination.droppableId) {\r\n            const fromGroup = newBoard.groups.find(group => group.id === source.droppableId)\r\n            const toGroup = newBoard.groups.find(group => group.id === destination.droppableId)\r\n            const currTask = fromGroup.tasks.find(task => task.id === draggableId)\r\n            fromGroup.tasks.splice(source.index, 1);\r\n            toGroup.tasks.splice(destination.index, 0, currTask)\r\n\r\n        }\r\n        dispatch(updateBoard(newBoard))\r\n    }\r\n\r\n    if (!board) return <LoaderSkyllo />\r\n    let backgroundStyle = board?.style?.bgImg.length > 9 ? 'backgroundImage' : 'backgroundColor'\r\n\r\n    return <div  style={{ [backgroundStyle]: board?.style?.bgImg, objectFit: 'cover', backgroundSize: 'cover' }} className=\"main\">\r\n\r\n\r\n        <div   className=\"board-app\" >\r\n            <BoardHeader board={board} />\r\n            <Popover board={board} />\r\n            <DragDropContext  onDragEnd={onDragEnd}>\r\n\r\n                <Droppable  style={{overflowY: 'unset'}} droppableId='all-groups' direction=\"horizontal\" type=\"group\">\r\n                    {(provided) => {\r\n                        return <li className='list-move-group'\r\n                            {...provided.draggableProps}\r\n                            ref={provided.innerRef} >\r\n\r\n                            <GroupList board={board} >\r\n                            </GroupList>\r\n\r\n                            { provided.placeholder }\r\n                        </li>\r\n                    }}\r\n                </Droppable>\r\n\r\n            </DragDropContext>\r\n\r\n\r\n            <Outlet />\r\n\r\n        </div>\r\n    </div >\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}