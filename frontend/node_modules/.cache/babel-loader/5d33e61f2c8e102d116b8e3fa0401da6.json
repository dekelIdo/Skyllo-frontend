{"ast":null,"code":"import { boardService } from \"../services/board.service.js\";\nimport { userService } from \"../services/user.service.js\";\nimport { showSuccessMsg, showErrorMsg } from '../services/event-bus.service.js'; // Action Creators:\n\nexport function getActionRemoveBoard(boardId) {\n  return {\n    type: 'REMOVE_BOARD',\n    boardId\n  };\n}\nexport function getActionAddBoard(board) {\n  return {\n    type: 'ADD_BOARD',\n    board\n  };\n}\nexport function getActionUpdateBoard(board) {\n  return {\n    type: 'UPDATE_BOARD',\n    board\n  };\n} // export function getActionUpdateBoard(board) {\n//     return {\n//         type: 'UPDATE_BOARD',\n//         board\n//     }\n// }\n\nexport function loadBoards() {\n  return async dispatch => {\n    try {\n      const boards = await boardService.query();\n      console.log('Boards from DB:', boards);\n      dispatch({\n        type: 'SET_BOARDS',\n        boards\n      });\n    } catch (err) {\n      showErrorMsg('Cannot load boards');\n      console.log('Cannot load boards', err);\n    }\n  };\n}\nexport function getCurrBoard(boardId) {\n  return async dispatch => {\n    try {\n      const board = await boardService.getById(boardId);\n      dispatch({\n        type: 'SET_BOARD',\n        board\n      });\n    } catch (err) {\n      showErrorMsg('Cannot load board');\n      console.log('Cannot load board', err);\n    }\n  };\n}\nexport function removeBoard(boardId) {\n  return async dispatch => {\n    try {\n      await boardService.remove(boardId);\n      console.log('Deleted Succesfully!');\n      dispatch(getActionRemoveBoard(boardId));\n      showSuccessMsg('Board removed');\n    } catch (err) {\n      showErrorMsg('Cannot remove board');\n      console.log('Cannot remove board', err);\n    }\n  };\n}\nexport function addBoard(board) {\n  return dispatch => {\n    boardService.save(board).then(savedBoard => {\n      console.log('Added Board', savedBoard);\n      dispatch(getActionAddBoard(savedBoard));\n      showSuccessMsg('Board added');\n    }).catch(err => {\n      showErrorMsg('Cannot add board');\n      console.log('Cannot add board', err);\n    });\n  };\n}\nexport function updateBoard(board) {\n  return (dispatch, getState) => {\n    const prevBoard = getState().boardModule.board; // dispatch(getActionUpdateBoard({ ...board }))\n\n    boardService.save(board).then(savedBoard => {\n      dispatch(getActionUpdateBoard(savedBoard));\n      showSuccessMsg('Board updated');\n    }).catch(err => {\n      showErrorMsg('Cannot update board');\n      dispatch(getActionUpdateBoard(prevBoard));\n      console.log('Cannot save board', err);\n    });\n  };\n}\nexport function addGroup(boardId, title, activity) {\n  return async dispatch => {\n    try {\n      const board = await boardService.addGroup(boardId, title, activity);\n      dispatch(getActionUpdateBoard(board));\n      showSuccessMsg('Group Added');\n    } catch (err) {\n      showErrorMsg('Cannot add group');\n      console.log('tassk');\n      console.log('error:', err);\n    }\n  };\n}\nexport function removeGroup(boardId, groupId, activity) {\n  return async dispatch => {\n    try {\n      const board = await boardService.removeGroup(boardId, groupId, activity);\n      dispatch(getActionUpdateBoard(board));\n      showSuccessMsg('Group Added');\n    } catch (err) {\n      showErrorMsg('Cannot add group');\n      console.log('error:', err);\n    }\n  };\n}\nexport function saveTask(boardId, groupId, task, activity) {\n  return async dispatch => {\n    try {\n      const board = await boardService.saveTask(boardId, groupId, task, activity);\n      dispatch(getActionUpdateBoard(board));\n      showSuccessMsg('task Added');\n    } catch (err) {\n      showErrorMsg('Cannot add task');\n      console.log('error:', err);\n    }\n  };\n}\nexport function removeTask(boardId, groupId, taskId, activity) {\n  return async dispatch => {\n    try {\n      const board = await boardService.removeTask(boardId, groupId, taskId, activity);\n      dispatch(getActionUpdateBoard(board));\n      showSuccessMsg('Task deleted');\n    } catch (err) {\n      showErrorMsg('Cannot delete task');\n      console.log('error:', err);\n    }\n  };\n} // Demo for Optimistic Mutation\n// (IOW - Assuming the server call will work, so updating the UI first)","map":{"version":3,"sources":["C:/Users/אלדד/Desktop/Sprint4/frontend/src/store/board.actions.js"],"names":["boardService","userService","showSuccessMsg","showErrorMsg","getActionRemoveBoard","boardId","type","getActionAddBoard","board","getActionUpdateBoard","loadBoards","dispatch","boards","query","console","log","err","getCurrBoard","getById","removeBoard","remove","addBoard","save","then","savedBoard","catch","updateBoard","getState","prevBoard","boardModule","addGroup","title","activity","removeGroup","groupId","saveTask","task","removeTask","taskId"],"mappings":"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","sourcesContent":["import { boardService } from \"../services/board.service.js\";\r\nimport { userService } from \"../services/user.service.js\";\r\nimport { showSuccessMsg, showErrorMsg } from '../services/event-bus.service.js'\r\n\r\n// Action Creators:\r\nexport function getActionRemoveBoard(boardId) {\r\n    return {\r\n        type: 'REMOVE_BOARD',\r\n        boardId\r\n    }\r\n}\r\nexport function getActionAddBoard(board) {\r\n    return {\r\n        type: 'ADD_BOARD',\r\n        board\r\n    }\r\n}\r\nexport function getActionUpdateBoard(board) {\r\n    return {\r\n        type: 'UPDATE_BOARD',\r\n        board\r\n    }\r\n}\r\n\r\n// export function getActionUpdateBoard(board) {\r\n//     return {\r\n//         type: 'UPDATE_BOARD',\r\n//         board\r\n//     }\r\n// }\r\n\r\n\r\nexport function loadBoards() {\r\n    return async (dispatch) => {\r\n        try {\r\n            const boards = await boardService.query()\r\n            console.log('Boards from DB:', boards)\r\n            dispatch({\r\n                type: 'SET_BOARDS',\r\n                boards\r\n            })\r\n\r\n        } catch (err) {\r\n            showErrorMsg('Cannot load boards')\r\n            console.log('Cannot load boards', err)\r\n        }\r\n    }\r\n}\r\nexport function getCurrBoard(boardId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const board = await boardService.getById(boardId)\r\n            dispatch({ type: 'SET_BOARD', board })\r\n        } catch (err) {\r\n            showErrorMsg('Cannot load board')\r\n            console.log('Cannot load board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeBoard(boardId) {\r\n    return async (dispatch) => {\r\n        try {\r\n            await boardService.remove(boardId)\r\n            console.log('Deleted Succesfully!');\r\n            dispatch(getActionRemoveBoard(boardId))\r\n            showSuccessMsg('Board removed')\r\n        } catch (err) {\r\n            showErrorMsg('Cannot remove board')\r\n            console.log('Cannot remove board', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function addBoard(board) {\r\n    return (dispatch) => {\r\n        boardService.save(board)\r\n            .then(savedBoard => {\r\n                console.log('Added Board', savedBoard);\r\n                dispatch(getActionAddBoard(savedBoard))\r\n                showSuccessMsg('Board added')\r\n            })\r\n            .catch(err => {\r\n                showErrorMsg('Cannot add board')\r\n                console.log('Cannot add board', err)\r\n            })\r\n    }\r\n}\r\n\r\nexport function updateBoard(board) {\r\n\r\n    return (dispatch, getState) => {\r\n        const prevBoard = getState().boardModule.board\r\n\r\n        // dispatch(getActionUpdateBoard({ ...board }))\r\n        boardService.save(board)\r\n            .then(savedBoard => {\r\n                dispatch(getActionUpdateBoard(savedBoard))\r\n                showSuccessMsg('Board updated')\r\n            })\r\n            .catch(err => {\r\n                showErrorMsg('Cannot update board')\r\n                dispatch(getActionUpdateBoard(prevBoard))\r\n\r\n                console.log('Cannot save board', err)\r\n            })\r\n    }\r\n}\r\n\r\nexport function addGroup(boardId, title, activity) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const board = await boardService.addGroup(boardId, title, activity)\r\n            dispatch(getActionUpdateBoard(board))\r\n            showSuccessMsg('Group Added')\r\n        } catch (err) {\r\n            showErrorMsg('Cannot add group')\r\n            console.log('tassk');\r\n\r\n            console.log('error:', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeGroup(boardId, groupId, activity) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const board = await boardService.removeGroup(boardId, groupId, activity)\r\n            dispatch(getActionUpdateBoard(board))\r\n            showSuccessMsg('Group Added')\r\n        } catch (err) {\r\n            showErrorMsg('Cannot add group')\r\n            console.log('error:', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function saveTask(boardId, groupId, task, activity) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const board = await boardService.saveTask(boardId, groupId, task, activity)\r\n            dispatch(getActionUpdateBoard(board))\r\n            showSuccessMsg('task Added')\r\n        } catch (err) {\r\n            showErrorMsg('Cannot add task')\r\n            console.log('error:', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeTask(boardId, groupId, taskId, activity) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const board = await boardService.removeTask(boardId, groupId, taskId, activity)\r\n            dispatch(getActionUpdateBoard(board))\r\n            showSuccessMsg('Task deleted')\r\n        } catch (err) {\r\n            showErrorMsg('Cannot delete task')\r\n            console.log('error:', err)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Demo for Optimistic Mutation\r\n// (IOW - Assuming the server call will work, so updating the UI first)\r\n"]},"metadata":{},"sourceType":"module"}