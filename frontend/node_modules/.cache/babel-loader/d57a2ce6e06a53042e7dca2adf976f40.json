{"ast":null,"code":"import io from 'socket.io-client';\nimport { userService } from './user.service';\nexport const SOCKET_EVENT_ADD_MSG = 'chat-add-msg';\nexport const SOCKET_EMIT_SEND_MSG = 'chat-send-msg';\nexport const SOCKET_EMIT_SET_TOPIC = 'chat-set-topic';\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\nexport const SOCKET_EVENT_REVIEW_ABOUT_YOU = 'review-about-you';\nconst SOCKET_EMIT_LOGIN = 'set-user-socket';\nconst SOCKET_EMIT_LOGOUT = 'unset-user-socket';\nconst baseUrl = process.env.NODE_ENV === 'production' ? '' : '//localhost:3030'; // export const socketService = createSocketService()\n\nexport const socketService = createDummySocketService(); // for debugging from console\n// window.socketService = socketService\n\nsocketService.setup();\n\nfunction createSocketService() {\n  var socket = null;\n  const socketService = {\n    setup() {\n      socket = io(baseUrl);\n      setTimeout(() => {\n        const user = userService.getLoggedinUser();\n        if (user) this.login(user._id);\n      }, 500);\n    },\n\n    on(eventName, cb) {\n      socket.on(eventName, cb);\n    },\n\n    off(eventName, cb = null) {\n      if (!socket) return;\n      if (!cb) socket.removeAllListeners(eventName);else socket.off(eventName, cb);\n    },\n\n    emit(eventName, data) {\n      socket.emit(eventName, data);\n    },\n\n    login(userId) {\n      socket.emit(SOCKET_EMIT_LOGIN, userId);\n    },\n\n    logout() {\n      socket.emit(SOCKET_EMIT_LOGOUT);\n    },\n\n    terminate() {\n      socket = null;\n    }\n\n  };\n  return socketService;\n} // eslint-disable-next-line\n\n\nfunction createDummySocketService() {\n  var listenersMap = {};\n  const socketService = {\n    listenersMap,\n\n    setup() {\n      listenersMap = {};\n    },\n\n    terminate() {\n      this.setup();\n    },\n\n    login() {},\n\n    logout() {},\n\n    on(eventName, cb) {\n      listenersMap[eventName] = [...(listenersMap[eventName] || []), cb];\n    },\n\n    off(eventName, cb) {\n      if (!listenersMap[eventName]) return;\n      if (!cb) delete listenersMap[eventName];else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb);\n    },\n\n    emit(eventName, data) {\n      if (!listenersMap[eventName]) return;\n      listenersMap[eventName].forEach(listener => {\n        listener(data);\n      });\n    },\n\n    debugMsg() {\n      this.emit('chat addMsg', {\n        from: 'Someone',\n        txt: 'Aha it worked!'\n      });\n    }\n\n  };\n  window.listenersMap = listenersMap;\n  return socketService;\n} // Basic Tests\n// function cb(x) {console.log('Socket Test - Expected Puk, Actual:', x)}\n// socketService.on('baba', cb)\n// socketService.on('baba', cb)\n// socketService.on('baba', cb)\n// socketService.on('mama', cb)\n// socketService.emit('baba', 'Puk')\n// socketService.off('baba', cb)","map":{"version":3,"sources":["C:/Users/אלדד/Desktop/Sprint4/frontend/src/services/socket.service.js"],"names":["io","userService","SOCKET_EVENT_ADD_MSG","SOCKET_EMIT_SEND_MSG","SOCKET_EMIT_SET_TOPIC","SOCKET_EMIT_USER_WATCH","SOCKET_EVENT_USER_UPDATED","SOCKET_EVENT_REVIEW_ADDED","SOCKET_EVENT_REVIEW_ABOUT_YOU","SOCKET_EMIT_LOGIN","SOCKET_EMIT_LOGOUT","baseUrl","process","env","NODE_ENV","socketService","createDummySocketService","setup","createSocketService","socket","setTimeout","user","getLoggedinUser","login","_id","on","eventName","cb","off","removeAllListeners","emit","data","userId","logout","terminate","listenersMap","filter","l","forEach","listener","debugMsg","from","txt","window"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,OAAO,MAAMC,oBAAoB,GAAG,cAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,eAA7B;AACP,OAAO,MAAMC,qBAAqB,GAAG,gBAA9B;AACP,OAAO,MAAMC,sBAAsB,GAAG,YAA/B;AACP,OAAO,MAAMC,yBAAyB,GAAG,cAAlC;AACP,OAAO,MAAMC,yBAAyB,GAAG,cAAlC;AACP,OAAO,MAAMC,6BAA6B,GAAG,kBAAtC;AAEP,MAAMC,iBAAiB,GAAG,iBAA1B;AACA,MAAMC,kBAAkB,GAAG,mBAA3B;AAGA,MAAMC,OAAO,GAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1B,GAA0C,EAA1C,GAA+C,kBAA/D,C,CACA;;AACA,OAAO,MAAMC,aAAa,GAAGC,wBAAwB,EAA9C,C,CAEP;AACA;;AAEAD,aAAa,CAACE,KAAd;;AAGA,SAASC,mBAAT,GAA+B;AAC7B,MAAIC,MAAM,GAAG,IAAb;AACA,QAAMJ,aAAa,GAAG;AACpBE,IAAAA,KAAK,GAAG;AACNE,MAAAA,MAAM,GAAGnB,EAAE,CAACW,OAAD,CAAX;AACAS,MAAAA,UAAU,CAAC,MAAI;AACb,cAAMC,IAAI,GAAGpB,WAAW,CAACqB,eAAZ,EAAb;AACA,YAAID,IAAJ,EAAU,KAAKE,KAAL,CAAWF,IAAI,CAACG,GAAhB;AACX,OAHS,EAGP,GAHO,CAAV;AAID,KAPmB;;AAQpBC,IAAAA,EAAE,CAACC,SAAD,EAAYC,EAAZ,EAAgB;AAChBR,MAAAA,MAAM,CAACM,EAAP,CAAUC,SAAV,EAAqBC,EAArB;AACD,KAVmB;;AAWpBC,IAAAA,GAAG,CAACF,SAAD,EAAYC,EAAE,GAAG,IAAjB,EAAuB;AACxB,UAAI,CAACR,MAAL,EAAa;AACb,UAAI,CAACQ,EAAL,EAASR,MAAM,CAACU,kBAAP,CAA0BH,SAA1B,EAAT,KACKP,MAAM,CAACS,GAAP,CAAWF,SAAX,EAAsBC,EAAtB;AACN,KAfmB;;AAgBpBG,IAAAA,IAAI,CAACJ,SAAD,EAAYK,IAAZ,EAAkB;AACpBZ,MAAAA,MAAM,CAACW,IAAP,CAAYJ,SAAZ,EAAuBK,IAAvB;AACD,KAlBmB;;AAmBpBR,IAAAA,KAAK,CAACS,MAAD,EAAS;AACZb,MAAAA,MAAM,CAACW,IAAP,CAAYrB,iBAAZ,EAA+BuB,MAA/B;AACD,KArBmB;;AAsBpBC,IAAAA,MAAM,GAAG;AACPd,MAAAA,MAAM,CAACW,IAAP,CAAYpB,kBAAZ;AACD,KAxBmB;;AAyBpBwB,IAAAA,SAAS,GAAG;AACVf,MAAAA,MAAM,GAAG,IAAT;AACD;;AA3BmB,GAAtB;AA8BA,SAAOJ,aAAP;AACD,C,CAED;;;AACA,SAASC,wBAAT,GAAoC;AAClC,MAAImB,YAAY,GAAG,EAAnB;AACA,QAAMpB,aAAa,GAAG;AACpBoB,IAAAA,YADoB;;AAEpBlB,IAAAA,KAAK,GAAG;AACNkB,MAAAA,YAAY,GAAG,EAAf;AACD,KAJmB;;AAKpBD,IAAAA,SAAS,GAAG;AACV,WAAKjB,KAAL;AACD,KAPmB;;AAQpBM,IAAAA,KAAK,GAAG,CACP,CATmB;;AAUpBU,IAAAA,MAAM,GAAG,CACR,CAXmB;;AAYpBR,IAAAA,EAAE,CAACC,SAAD,EAAYC,EAAZ,EAAgB;AAChBQ,MAAAA,YAAY,CAACT,SAAD,CAAZ,GAA0B,CAAC,IAAIS,YAAY,CAACT,SAAD,CAAb,IAA6B,EAAhC,CAAD,EAAqCC,EAArC,CAA1B;AACD,KAdmB;;AAepBC,IAAAA,GAAG,CAACF,SAAD,EAAYC,EAAZ,EAAgB;AACjB,UAAI,CAACQ,YAAY,CAACT,SAAD,CAAjB,EAA8B;AAC9B,UAAI,CAACC,EAAL,EAAS,OAAOQ,YAAY,CAACT,SAAD,CAAnB,CAAT,KACKS,YAAY,CAACT,SAAD,CAAZ,GAA0BS,YAAY,CAACT,SAAD,CAAZ,CAAwBU,MAAxB,CAA+BC,CAAC,IAAIA,CAAC,KAAKV,EAA1C,CAA1B;AACN,KAnBmB;;AAoBpBG,IAAAA,IAAI,CAACJ,SAAD,EAAYK,IAAZ,EAAkB;AACpB,UAAI,CAACI,YAAY,CAACT,SAAD,CAAjB,EAA8B;AAC9BS,MAAAA,YAAY,CAACT,SAAD,CAAZ,CAAwBY,OAAxB,CAAgCC,QAAQ,IAAI;AAC1CA,QAAAA,QAAQ,CAACR,IAAD,CAAR;AACD,OAFD;AAGD,KAzBmB;;AA0BpBS,IAAAA,QAAQ,GAAG;AACT,WAAKV,IAAL,CAAU,aAAV,EAAyB;AAAEW,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,GAAG,EAAE;AAAxB,OAAzB;AACD;;AA5BmB,GAAtB;AA8BAC,EAAAA,MAAM,CAACR,YAAP,GAAsBA,YAAtB;AACA,SAAOpB,aAAP;AACD,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import io from 'socket.io-client'\r\nimport { userService } from './user.service'\r\n\r\nexport const SOCKET_EVENT_ADD_MSG = 'chat-add-msg'\r\nexport const SOCKET_EMIT_SEND_MSG = 'chat-send-msg'\r\nexport const SOCKET_EMIT_SET_TOPIC = 'chat-set-topic'\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch'\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated'\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added'\r\nexport const SOCKET_EVENT_REVIEW_ABOUT_YOU = 'review-about-you'\r\n\r\nconst SOCKET_EMIT_LOGIN = 'set-user-socket'\r\nconst SOCKET_EMIT_LOGOUT = 'unset-user-socket'\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\n// export const socketService = createSocketService()\r\nexport const socketService = createDummySocketService()\r\n\r\n// for debugging from console\r\n// window.socketService = socketService\r\n\r\nsocketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    setup() {\r\n      socket = io(baseUrl)\r\n      setTimeout(()=>{\r\n        const user = userService.getLoggedinUser()\r\n        if (user) this.login(user._id)\r\n      }, 500)\r\n    },\r\n    on(eventName, cb) {\r\n      socket.on(eventName, cb)\r\n    },\r\n    off(eventName, cb = null) {\r\n      if (!socket) return;\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    emit(eventName, data) {\r\n      socket.emit(eventName, data)\r\n    },\r\n    login(userId) {\r\n      socket.emit(SOCKET_EMIT_LOGIN, userId)\r\n    },\r\n    logout() {\r\n      socket.emit(SOCKET_EMIT_LOGOUT)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n    },\r\n\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    listenersMap,\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    login() {   \r\n    },\r\n    logout() {   \r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      if (!cb) delete listenersMap[eventName]\r\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', { from: 'Someone', txt: 'Aha it worked!' })\r\n    },\r\n  }\r\n  window.listenersMap = listenersMap;\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\n// function cb(x) {console.log('Socket Test - Expected Puk, Actual:', x)}\r\n// socketService.on('baba', cb)\r\n// socketService.on('baba', cb)\r\n// socketService.on('baba', cb)\r\n// socketService.on('mama', cb)\r\n// socketService.emit('baba', 'Puk')\r\n// socketService.off('baba', cb)\r\n"]},"metadata":{},"sourceType":"module"}